//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Image_Client.WCF {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class WebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetAllMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageByCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShowAllProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductByCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductBySearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCategoryNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckLoginCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerByPhoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckLoginAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountByPhoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountBySearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUrlByAccountIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllAccountFunctionOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertAccountFunctionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertCustomerAllColumnOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllEvaluteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEvaluteByProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEvaluteByRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertEvaluteOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEvaluteOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEvaluteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEventByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderDetailByOrderIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReiveDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllSupplierOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllSupplierByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertSupplierOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSupplierOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSupplierOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllBankingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllBankingByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBankingOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBankingOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBankingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllRecipientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecipientBySearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertRecipientOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRecipientOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRecipientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllFunctionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFunctionByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertFunctionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFunctionOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFunctionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService() {
            this.Url = global::Image_Client.Properties.Settings.Default.Image_Client_WCF_WebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetAllMessageCompletedEventHandler GetAllMessageCompleted;
        
        /// <remarks/>
        public event GetMessageByCategoryCompletedEventHandler GetMessageByCategoryCompleted;
        
        /// <remarks/>
        public event InsertMessageCompletedEventHandler InsertMessageCompleted;
        
        /// <remarks/>
        public event UpdateMessageCompletedEventHandler UpdateMessageCompleted;
        
        /// <remarks/>
        public event DeleteMessageCompletedEventHandler DeleteMessageCompleted;
        
        /// <remarks/>
        public event ShowAllProductCompletedEventHandler ShowAllProductCompleted;
        
        /// <remarks/>
        public event GetAllProductCompletedEventHandler GetAllProductCompleted;
        
        /// <remarks/>
        public event GetCountProductCompletedEventHandler GetCountProductCompleted;
        
        /// <remarks/>
        public event GetProductByCategoryCompletedEventHandler GetProductByCategoryCompleted;
        
        /// <remarks/>
        public event GetProductBySearchCompletedEventHandler GetProductBySearchCompleted;
        
        /// <remarks/>
        public event InsertProductCompletedEventHandler InsertProductCompleted;
        
        /// <remarks/>
        public event UpdateProductCompletedEventHandler UpdateProductCompleted;
        
        /// <remarks/>
        public event DeleteProductCompletedEventHandler DeleteProductCompleted;
        
        /// <remarks/>
        public event GetAllCategoryCompletedEventHandler GetAllCategoryCompleted;
        
        /// <remarks/>
        public event GetCategoryNameCompletedEventHandler GetCategoryNameCompleted;
        
        /// <remarks/>
        public event InsertCategoryCompletedEventHandler InsertCategoryCompleted;
        
        /// <remarks/>
        public event UpdateCategoryCompletedEventHandler UpdateCategoryCompleted;
        
        /// <remarks/>
        public event DeleteCategoryCompletedEventHandler DeleteCategoryCompleted;
        
        /// <remarks/>
        public event CheckLoginCustomerCompletedEventHandler CheckLoginCustomerCompleted;
        
        /// <remarks/>
        public event GetCustomerByPhoneCompletedEventHandler GetCustomerByPhoneCompleted;
        
        /// <remarks/>
        public event CheckLoginAccountCompletedEventHandler CheckLoginAccountCompleted;
        
        /// <remarks/>
        public event GetAccountByPhoneCompletedEventHandler GetAccountByPhoneCompleted;
        
        /// <remarks/>
        public event RegisterCustomerCompletedEventHandler RegisterCustomerCompleted;
        
        /// <remarks/>
        public event RegisterAccountCompletedEventHandler RegisterAccountCompleted;
        
        /// <remarks/>
        public event GetAllAccountCompletedEventHandler GetAllAccountCompleted;
        
        /// <remarks/>
        public event GetAccountByIDCompletedEventHandler GetAccountByIDCompleted;
        
        /// <remarks/>
        public event GetAccountBySearchCompletedEventHandler GetAccountBySearchCompleted;
        
        /// <remarks/>
        public event GetUrlByAccountIDCompletedEventHandler GetUrlByAccountIDCompleted;
        
        /// <remarks/>
        public event UpdateAccountCompletedEventHandler UpdateAccountCompleted;
        
        /// <remarks/>
        public event DeleteAccountCompletedEventHandler DeleteAccountCompleted;
        
        /// <remarks/>
        public event GetAllAccountFunctionCompletedEventHandler GetAllAccountFunctionCompleted;
        
        /// <remarks/>
        public event InsertAccountFunctionCompletedEventHandler InsertAccountFunctionCompleted;
        
        /// <remarks/>
        public event GetAllCustomerCompletedEventHandler GetAllCustomerCompleted;
        
        /// <remarks/>
        public event InsertCustomerAllColumnCompletedEventHandler InsertCustomerAllColumnCompleted;
        
        /// <remarks/>
        public event UpdateCustomerCompletedEventHandler UpdateCustomerCompleted;
        
        /// <remarks/>
        public event DeleteCustomerCompletedEventHandler DeleteCustomerCompleted;
        
        /// <remarks/>
        public event GetAllEvaluteCompletedEventHandler GetAllEvaluteCompleted;
        
        /// <remarks/>
        public event GetEvaluteByProductCompletedEventHandler GetEvaluteByProductCompleted;
        
        /// <remarks/>
        public event GetEvaluteByRateCompletedEventHandler GetEvaluteByRateCompleted;
        
        /// <remarks/>
        public event InsertEvaluteCompletedEventHandler InsertEvaluteCompleted;
        
        /// <remarks/>
        public event UpdateEvaluteCompletedEventHandler UpdateEvaluteCompleted;
        
        /// <remarks/>
        public event DeleteEvaluteCompletedEventHandler DeleteEvaluteCompleted;
        
        /// <remarks/>
        public event GetAllEventCompletedEventHandler GetAllEventCompleted;
        
        /// <remarks/>
        public event GetEventByNameCompletedEventHandler GetEventByNameCompleted;
        
        /// <remarks/>
        public event InsertEventCompletedEventHandler InsertEventCompleted;
        
        /// <remarks/>
        public event UpdateEventCompletedEventHandler UpdateEventCompleted;
        
        /// <remarks/>
        public event DeleteEventCompletedEventHandler DeleteEventCompleted;
        
        /// <remarks/>
        public event GetOrderDetailByOrderIDCompletedEventHandler GetOrderDetailByOrderIDCompleted;
        
        /// <remarks/>
        public event GetReiveDateCompletedEventHandler GetReiveDateCompleted;
        
        /// <remarks/>
        public event GetAllOrderCompletedEventHandler GetAllOrderCompleted;
        
        /// <remarks/>
        public event GetAllSupplierCompletedEventHandler GetAllSupplierCompleted;
        
        /// <remarks/>
        public event GetAllSupplierByNameCompletedEventHandler GetAllSupplierByNameCompleted;
        
        /// <remarks/>
        public event InsertSupplierCompletedEventHandler InsertSupplierCompleted;
        
        /// <remarks/>
        public event UpdateSupplierCompletedEventHandler UpdateSupplierCompleted;
        
        /// <remarks/>
        public event DeleteSupplierCompletedEventHandler DeleteSupplierCompleted;
        
        /// <remarks/>
        public event GetAllBankingCompletedEventHandler GetAllBankingCompleted;
        
        /// <remarks/>
        public event GetAllBankingByNameCompletedEventHandler GetAllBankingByNameCompleted;
        
        /// <remarks/>
        public event InsertBankingCompletedEventHandler InsertBankingCompleted;
        
        /// <remarks/>
        public event UpdateBankingCompletedEventHandler UpdateBankingCompleted;
        
        /// <remarks/>
        public event DeleteBankingCompletedEventHandler DeleteBankingCompleted;
        
        /// <remarks/>
        public event GetAllRecipientCompletedEventHandler GetAllRecipientCompleted;
        
        /// <remarks/>
        public event GetRecipientBySearchCompletedEventHandler GetRecipientBySearchCompleted;
        
        /// <remarks/>
        public event InsertRecipientCompletedEventHandler InsertRecipientCompleted;
        
        /// <remarks/>
        public event UpdateRecipientCompletedEventHandler UpdateRecipientCompleted;
        
        /// <remarks/>
        public event DeleteRecipientCompletedEventHandler DeleteRecipientCompleted;
        
        /// <remarks/>
        public event GetAllGroupCompletedEventHandler GetAllGroupCompleted;
        
        /// <remarks/>
        public event GetGroupByIDCompletedEventHandler GetGroupByIDCompleted;
        
        /// <remarks/>
        public event InsertGroupCompletedEventHandler InsertGroupCompleted;
        
        /// <remarks/>
        public event UpdateGroupCompletedEventHandler UpdateGroupCompleted;
        
        /// <remarks/>
        public event DeleteGroupCompletedEventHandler DeleteGroupCompleted;
        
        /// <remarks/>
        public event GetAllFunctionCompletedEventHandler GetAllFunctionCompleted;
        
        /// <remarks/>
        public event GetFunctionByIDCompletedEventHandler GetFunctionByIDCompleted;
        
        /// <remarks/>
        public event InsertFunctionCompletedEventHandler InsertFunctionCompleted;
        
        /// <remarks/>
        public event UpdateFunctionCompletedEventHandler UpdateFunctionCompleted;
        
        /// <remarks/>
        public event DeleteFunctionCompletedEventHandler DeleteFunctionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllMessage() {
            object[] results = this.Invoke("GetAllMessage", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllMessageAsync() {
            this.GetAllMessageAsync(null);
        }
        
        /// <remarks/>
        public void GetAllMessageAsync(object userState) {
            if ((this.GetAllMessageOperationCompleted == null)) {
                this.GetAllMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMessageOperationCompleted);
            }
            this.InvokeAsync("GetAllMessage", new object[0], this.GetAllMessageOperationCompleted, userState);
        }
        
        private void OnGetAllMessageOperationCompleted(object arg) {
            if ((this.GetAllMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMessageCompleted(this, new GetAllMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMessageByCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMessageByCategory(string CategoryName) {
            object[] results = this.Invoke("GetMessageByCategory", new object[] {
                        CategoryName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageByCategoryAsync(string CategoryName) {
            this.GetMessageByCategoryAsync(CategoryName, null);
        }
        
        /// <remarks/>
        public void GetMessageByCategoryAsync(string CategoryName, object userState) {
            if ((this.GetMessageByCategoryOperationCompleted == null)) {
                this.GetMessageByCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageByCategoryOperationCompleted);
            }
            this.InvokeAsync("GetMessageByCategory", new object[] {
                        CategoryName}, this.GetMessageByCategoryOperationCompleted, userState);
        }
        
        private void OnGetMessageByCategoryOperationCompleted(object arg) {
            if ((this.GetMessageByCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageByCategoryCompleted(this, new GetMessageByCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertMessage(string MessageContent, string Category, int CustomerID) {
            object[] results = this.Invoke("InsertMessage", new object[] {
                        MessageContent,
                        Category,
                        CustomerID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertMessageAsync(string MessageContent, string Category, int CustomerID) {
            this.InsertMessageAsync(MessageContent, Category, CustomerID, null);
        }
        
        /// <remarks/>
        public void InsertMessageAsync(string MessageContent, string Category, int CustomerID, object userState) {
            if ((this.InsertMessageOperationCompleted == null)) {
                this.InsertMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertMessageOperationCompleted);
            }
            this.InvokeAsync("InsertMessage", new object[] {
                        MessageContent,
                        Category,
                        CustomerID}, this.InsertMessageOperationCompleted, userState);
        }
        
        private void OnInsertMessageOperationCompleted(object arg) {
            if ((this.InsertMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertMessageCompleted(this, new InsertMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateMessage(int MessageID, string MessageContent, string Category, int CustomerID) {
            object[] results = this.Invoke("UpdateMessage", new object[] {
                        MessageID,
                        MessageContent,
                        Category,
                        CustomerID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMessageAsync(int MessageID, string MessageContent, string Category, int CustomerID) {
            this.UpdateMessageAsync(MessageID, MessageContent, Category, CustomerID, null);
        }
        
        /// <remarks/>
        public void UpdateMessageAsync(int MessageID, string MessageContent, string Category, int CustomerID, object userState) {
            if ((this.UpdateMessageOperationCompleted == null)) {
                this.UpdateMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMessageOperationCompleted);
            }
            this.InvokeAsync("UpdateMessage", new object[] {
                        MessageID,
                        MessageContent,
                        Category,
                        CustomerID}, this.UpdateMessageOperationCompleted, userState);
        }
        
        private void OnUpdateMessageOperationCompleted(object arg) {
            if ((this.UpdateMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMessageCompleted(this, new UpdateMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteMessage(int MessageID) {
            object[] results = this.Invoke("DeleteMessage", new object[] {
                        MessageID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteMessageAsync(int MessageID) {
            this.DeleteMessageAsync(MessageID, null);
        }
        
        /// <remarks/>
        public void DeleteMessageAsync(int MessageID, object userState) {
            if ((this.DeleteMessageOperationCompleted == null)) {
                this.DeleteMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMessageOperationCompleted);
            }
            this.InvokeAsync("DeleteMessage", new object[] {
                        MessageID}, this.DeleteMessageOperationCompleted, userState);
        }
        
        private void OnDeleteMessageOperationCompleted(object arg) {
            if ((this.DeleteMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMessageCompleted(this, new DeleteMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ShowAllProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ShowAllProduct() {
            object[] results = this.Invoke("ShowAllProduct", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ShowAllProductAsync() {
            this.ShowAllProductAsync(null);
        }
        
        /// <remarks/>
        public void ShowAllProductAsync(object userState) {
            if ((this.ShowAllProductOperationCompleted == null)) {
                this.ShowAllProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShowAllProductOperationCompleted);
            }
            this.InvokeAsync("ShowAllProduct", new object[0], this.ShowAllProductOperationCompleted, userState);
        }
        
        private void OnShowAllProductOperationCompleted(object arg) {
            if ((this.ShowAllProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShowAllProductCompleted(this, new ShowAllProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllProduct(string searchName, string sortName, string typeSort, int offset, int limit, int category) {
            object[] results = this.Invoke("GetAllProduct", new object[] {
                        searchName,
                        sortName,
                        typeSort,
                        offset,
                        limit,
                        category});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllProductAsync(string searchName, string sortName, string typeSort, int offset, int limit, int category) {
            this.GetAllProductAsync(searchName, sortName, typeSort, offset, limit, category, null);
        }
        
        /// <remarks/>
        public void GetAllProductAsync(string searchName, string sortName, string typeSort, int offset, int limit, int category, object userState) {
            if ((this.GetAllProductOperationCompleted == null)) {
                this.GetAllProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllProductOperationCompleted);
            }
            this.InvokeAsync("GetAllProduct", new object[] {
                        searchName,
                        sortName,
                        typeSort,
                        offset,
                        limit,
                        category}, this.GetAllProductOperationCompleted, userState);
        }
        
        private void OnGetAllProductOperationCompleted(object arg) {
            if ((this.GetAllProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllProductCompleted(this, new GetAllProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCountProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCountProduct(string searchName, int category) {
            object[] results = this.Invoke("GetCountProduct", new object[] {
                        searchName,
                        category});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCountProductAsync(string searchName, int category) {
            this.GetCountProductAsync(searchName, category, null);
        }
        
        /// <remarks/>
        public void GetCountProductAsync(string searchName, int category, object userState) {
            if ((this.GetCountProductOperationCompleted == null)) {
                this.GetCountProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountProductOperationCompleted);
            }
            this.InvokeAsync("GetCountProduct", new object[] {
                        searchName,
                        category}, this.GetCountProductOperationCompleted, userState);
        }
        
        private void OnGetCountProductOperationCompleted(object arg) {
            if ((this.GetCountProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountProductCompleted(this, new GetCountProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductByCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProductByCategory(int categoryID) {
            object[] results = this.Invoke("GetProductByCategory", new object[] {
                        categoryID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductByCategoryAsync(int categoryID) {
            this.GetProductByCategoryAsync(categoryID, null);
        }
        
        /// <remarks/>
        public void GetProductByCategoryAsync(int categoryID, object userState) {
            if ((this.GetProductByCategoryOperationCompleted == null)) {
                this.GetProductByCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductByCategoryOperationCompleted);
            }
            this.InvokeAsync("GetProductByCategory", new object[] {
                        categoryID}, this.GetProductByCategoryOperationCompleted, userState);
        }
        
        private void OnGetProductByCategoryOperationCompleted(object arg) {
            if ((this.GetProductByCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductByCategoryCompleted(this, new GetProductByCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductBySearch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProductBySearch(string Search) {
            object[] results = this.Invoke("GetProductBySearch", new object[] {
                        Search});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductBySearchAsync(string Search) {
            this.GetProductBySearchAsync(Search, null);
        }
        
        /// <remarks/>
        public void GetProductBySearchAsync(string Search, object userState) {
            if ((this.GetProductBySearchOperationCompleted == null)) {
                this.GetProductBySearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductBySearchOperationCompleted);
            }
            this.InvokeAsync("GetProductBySearch", new object[] {
                        Search}, this.GetProductBySearchOperationCompleted, userState);
        }
        
        private void OnGetProductBySearchOperationCompleted(object arg) {
            if ((this.GetProductBySearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductBySearchCompleted(this, new GetProductBySearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertProduct(string ProductID, string Product_name, string InputDescription, string Image, float Price, float Discount, int Category_id, int Supplier_id, int Sold, int Inventory) {
            object[] results = this.Invoke("InsertProduct", new object[] {
                        ProductID,
                        Product_name,
                        InputDescription,
                        Image,
                        Price,
                        Discount,
                        Category_id,
                        Supplier_id,
                        Sold,
                        Inventory});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertProductAsync(string ProductID, string Product_name, string InputDescription, string Image, float Price, float Discount, int Category_id, int Supplier_id, int Sold, int Inventory) {
            this.InsertProductAsync(ProductID, Product_name, InputDescription, Image, Price, Discount, Category_id, Supplier_id, Sold, Inventory, null);
        }
        
        /// <remarks/>
        public void InsertProductAsync(string ProductID, string Product_name, string InputDescription, string Image, float Price, float Discount, int Category_id, int Supplier_id, int Sold, int Inventory, object userState) {
            if ((this.InsertProductOperationCompleted == null)) {
                this.InsertProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertProductOperationCompleted);
            }
            this.InvokeAsync("InsertProduct", new object[] {
                        ProductID,
                        Product_name,
                        InputDescription,
                        Image,
                        Price,
                        Discount,
                        Category_id,
                        Supplier_id,
                        Sold,
                        Inventory}, this.InsertProductOperationCompleted, userState);
        }
        
        private void OnInsertProductOperationCompleted(object arg) {
            if ((this.InsertProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertProductCompleted(this, new InsertProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateProduct(string ProductID, string Product_name, string InputDescription, string Image, float Price, float Discount, int Category_id, int Supplier_id, int Sold, int Inventory) {
            object[] results = this.Invoke("UpdateProduct", new object[] {
                        ProductID,
                        Product_name,
                        InputDescription,
                        Image,
                        Price,
                        Discount,
                        Category_id,
                        Supplier_id,
                        Sold,
                        Inventory});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateProductAsync(string ProductID, string Product_name, string InputDescription, string Image, float Price, float Discount, int Category_id, int Supplier_id, int Sold, int Inventory) {
            this.UpdateProductAsync(ProductID, Product_name, InputDescription, Image, Price, Discount, Category_id, Supplier_id, Sold, Inventory, null);
        }
        
        /// <remarks/>
        public void UpdateProductAsync(string ProductID, string Product_name, string InputDescription, string Image, float Price, float Discount, int Category_id, int Supplier_id, int Sold, int Inventory, object userState) {
            if ((this.UpdateProductOperationCompleted == null)) {
                this.UpdateProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProductOperationCompleted);
            }
            this.InvokeAsync("UpdateProduct", new object[] {
                        ProductID,
                        Product_name,
                        InputDescription,
                        Image,
                        Price,
                        Discount,
                        Category_id,
                        Supplier_id,
                        Sold,
                        Inventory}, this.UpdateProductOperationCompleted, userState);
        }
        
        private void OnUpdateProductOperationCompleted(object arg) {
            if ((this.UpdateProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProductCompleted(this, new UpdateProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteProduct(string ProductID) {
            object[] results = this.Invoke("DeleteProduct", new object[] {
                        ProductID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProductAsync(string ProductID) {
            this.DeleteProductAsync(ProductID, null);
        }
        
        /// <remarks/>
        public void DeleteProductAsync(string ProductID, object userState) {
            if ((this.DeleteProductOperationCompleted == null)) {
                this.DeleteProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProductOperationCompleted);
            }
            this.InvokeAsync("DeleteProduct", new object[] {
                        ProductID}, this.DeleteProductOperationCompleted, userState);
        }
        
        private void OnDeleteProductOperationCompleted(object arg) {
            if ((this.DeleteProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProductCompleted(this, new DeleteProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllCategory() {
            object[] results = this.Invoke("GetAllCategory", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllCategoryAsync() {
            this.GetAllCategoryAsync(null);
        }
        
        /// <remarks/>
        public void GetAllCategoryAsync(object userState) {
            if ((this.GetAllCategoryOperationCompleted == null)) {
                this.GetAllCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllCategoryOperationCompleted);
            }
            this.InvokeAsync("GetAllCategory", new object[0], this.GetAllCategoryOperationCompleted, userState);
        }
        
        private void OnGetAllCategoryOperationCompleted(object arg) {
            if ((this.GetAllCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllCategoryCompleted(this, new GetAllCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCategoryName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCategoryName(int CategoryID) {
            object[] results = this.Invoke("GetCategoryName", new object[] {
                        CategoryID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCategoryNameAsync(int CategoryID) {
            this.GetCategoryNameAsync(CategoryID, null);
        }
        
        /// <remarks/>
        public void GetCategoryNameAsync(int CategoryID, object userState) {
            if ((this.GetCategoryNameOperationCompleted == null)) {
                this.GetCategoryNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCategoryNameOperationCompleted);
            }
            this.InvokeAsync("GetCategoryName", new object[] {
                        CategoryID}, this.GetCategoryNameOperationCompleted, userState);
        }
        
        private void OnGetCategoryNameOperationCompleted(object arg) {
            if ((this.GetCategoryNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCategoryNameCompleted(this, new GetCategoryNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertCategory(string CategoryName) {
            object[] results = this.Invoke("InsertCategory", new object[] {
                        CategoryName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertCategoryAsync(string CategoryName) {
            this.InsertCategoryAsync(CategoryName, null);
        }
        
        /// <remarks/>
        public void InsertCategoryAsync(string CategoryName, object userState) {
            if ((this.InsertCategoryOperationCompleted == null)) {
                this.InsertCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCategoryOperationCompleted);
            }
            this.InvokeAsync("InsertCategory", new object[] {
                        CategoryName}, this.InsertCategoryOperationCompleted, userState);
        }
        
        private void OnInsertCategoryOperationCompleted(object arg) {
            if ((this.InsertCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCategoryCompleted(this, new InsertCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateCategory(int CategoryID, string CategoryName) {
            object[] results = this.Invoke("UpdateCategory", new object[] {
                        CategoryID,
                        CategoryName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCategoryAsync(int CategoryID, string CategoryName) {
            this.UpdateCategoryAsync(CategoryID, CategoryName, null);
        }
        
        /// <remarks/>
        public void UpdateCategoryAsync(int CategoryID, string CategoryName, object userState) {
            if ((this.UpdateCategoryOperationCompleted == null)) {
                this.UpdateCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCategoryOperationCompleted);
            }
            this.InvokeAsync("UpdateCategory", new object[] {
                        CategoryID,
                        CategoryName}, this.UpdateCategoryOperationCompleted, userState);
        }
        
        private void OnUpdateCategoryOperationCompleted(object arg) {
            if ((this.UpdateCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCategoryCompleted(this, new UpdateCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteCategory(int CategoryID) {
            object[] results = this.Invoke("DeleteCategory", new object[] {
                        CategoryID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCategoryAsync(int CategoryID) {
            this.DeleteCategoryAsync(CategoryID, null);
        }
        
        /// <remarks/>
        public void DeleteCategoryAsync(int CategoryID, object userState) {
            if ((this.DeleteCategoryOperationCompleted == null)) {
                this.DeleteCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCategoryOperationCompleted);
            }
            this.InvokeAsync("DeleteCategory", new object[] {
                        CategoryID}, this.DeleteCategoryOperationCompleted, userState);
        }
        
        private void OnDeleteCategoryOperationCompleted(object arg) {
            if ((this.DeleteCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCategoryCompleted(this, new DeleteCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckLoginCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CheckLoginCustomer(string Phone, string Password) {
            object[] results = this.Invoke("CheckLoginCustomer", new object[] {
                        Phone,
                        Password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CheckLoginCustomerAsync(string Phone, string Password) {
            this.CheckLoginCustomerAsync(Phone, Password, null);
        }
        
        /// <remarks/>
        public void CheckLoginCustomerAsync(string Phone, string Password, object userState) {
            if ((this.CheckLoginCustomerOperationCompleted == null)) {
                this.CheckLoginCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckLoginCustomerOperationCompleted);
            }
            this.InvokeAsync("CheckLoginCustomer", new object[] {
                        Phone,
                        Password}, this.CheckLoginCustomerOperationCompleted, userState);
        }
        
        private void OnCheckLoginCustomerOperationCompleted(object arg) {
            if ((this.CheckLoginCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckLoginCustomerCompleted(this, new CheckLoginCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCustomerByPhone", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCustomerByPhone(string Phone) {
            object[] results = this.Invoke("GetCustomerByPhone", new object[] {
                        Phone});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerByPhoneAsync(string Phone) {
            this.GetCustomerByPhoneAsync(Phone, null);
        }
        
        /// <remarks/>
        public void GetCustomerByPhoneAsync(string Phone, object userState) {
            if ((this.GetCustomerByPhoneOperationCompleted == null)) {
                this.GetCustomerByPhoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerByPhoneOperationCompleted);
            }
            this.InvokeAsync("GetCustomerByPhone", new object[] {
                        Phone}, this.GetCustomerByPhoneOperationCompleted, userState);
        }
        
        private void OnGetCustomerByPhoneOperationCompleted(object arg) {
            if ((this.GetCustomerByPhoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerByPhoneCompleted(this, new GetCustomerByPhoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckLoginAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CheckLoginAccount(string Phone, string Password) {
            object[] results = this.Invoke("CheckLoginAccount", new object[] {
                        Phone,
                        Password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CheckLoginAccountAsync(string Phone, string Password) {
            this.CheckLoginAccountAsync(Phone, Password, null);
        }
        
        /// <remarks/>
        public void CheckLoginAccountAsync(string Phone, string Password, object userState) {
            if ((this.CheckLoginAccountOperationCompleted == null)) {
                this.CheckLoginAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckLoginAccountOperationCompleted);
            }
            this.InvokeAsync("CheckLoginAccount", new object[] {
                        Phone,
                        Password}, this.CheckLoginAccountOperationCompleted, userState);
        }
        
        private void OnCheckLoginAccountOperationCompleted(object arg) {
            if ((this.CheckLoginAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckLoginAccountCompleted(this, new CheckLoginAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountByPhone", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAccountByPhone(string Phone) {
            object[] results = this.Invoke("GetAccountByPhone", new object[] {
                        Phone});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountByPhoneAsync(string Phone) {
            this.GetAccountByPhoneAsync(Phone, null);
        }
        
        /// <remarks/>
        public void GetAccountByPhoneAsync(string Phone, object userState) {
            if ((this.GetAccountByPhoneOperationCompleted == null)) {
                this.GetAccountByPhoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountByPhoneOperationCompleted);
            }
            this.InvokeAsync("GetAccountByPhone", new object[] {
                        Phone}, this.GetAccountByPhoneOperationCompleted, userState);
        }
        
        private void OnGetAccountByPhoneOperationCompleted(object arg) {
            if ((this.GetAccountByPhoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountByPhoneCompleted(this, new GetAccountByPhoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegisterCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RegisterCustomer(string FirstName, string LastName, string Phone, string Password) {
            object[] results = this.Invoke("RegisterCustomer", new object[] {
                        FirstName,
                        LastName,
                        Phone,
                        Password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterCustomerAsync(string FirstName, string LastName, string Phone, string Password) {
            this.RegisterCustomerAsync(FirstName, LastName, Phone, Password, null);
        }
        
        /// <remarks/>
        public void RegisterCustomerAsync(string FirstName, string LastName, string Phone, string Password, object userState) {
            if ((this.RegisterCustomerOperationCompleted == null)) {
                this.RegisterCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterCustomerOperationCompleted);
            }
            this.InvokeAsync("RegisterCustomer", new object[] {
                        FirstName,
                        LastName,
                        Phone,
                        Password}, this.RegisterCustomerOperationCompleted, userState);
        }
        
        private void OnRegisterCustomerOperationCompleted(object arg) {
            if ((this.RegisterCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterCustomerCompleted(this, new RegisterCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegisterAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RegisterAccount(string UserName, string Password, int GroupID, string EmployeeName, string Phone) {
            object[] results = this.Invoke("RegisterAccount", new object[] {
                        UserName,
                        Password,
                        GroupID,
                        EmployeeName,
                        Phone});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterAccountAsync(string UserName, string Password, int GroupID, string EmployeeName, string Phone) {
            this.RegisterAccountAsync(UserName, Password, GroupID, EmployeeName, Phone, null);
        }
        
        /// <remarks/>
        public void RegisterAccountAsync(string UserName, string Password, int GroupID, string EmployeeName, string Phone, object userState) {
            if ((this.RegisterAccountOperationCompleted == null)) {
                this.RegisterAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterAccountOperationCompleted);
            }
            this.InvokeAsync("RegisterAccount", new object[] {
                        UserName,
                        Password,
                        GroupID,
                        EmployeeName,
                        Phone}, this.RegisterAccountOperationCompleted, userState);
        }
        
        private void OnRegisterAccountOperationCompleted(object arg) {
            if ((this.RegisterAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterAccountCompleted(this, new RegisterAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllAccount() {
            object[] results = this.Invoke("GetAllAccount", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllAccountAsync() {
            this.GetAllAccountAsync(null);
        }
        
        /// <remarks/>
        public void GetAllAccountAsync(object userState) {
            if ((this.GetAllAccountOperationCompleted == null)) {
                this.GetAllAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllAccountOperationCompleted);
            }
            this.InvokeAsync("GetAllAccount", new object[0], this.GetAllAccountOperationCompleted, userState);
        }
        
        private void OnGetAllAccountOperationCompleted(object arg) {
            if ((this.GetAllAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllAccountCompleted(this, new GetAllAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAccountByID(int AccountID) {
            object[] results = this.Invoke("GetAccountByID", new object[] {
                        AccountID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountByIDAsync(int AccountID) {
            this.GetAccountByIDAsync(AccountID, null);
        }
        
        /// <remarks/>
        public void GetAccountByIDAsync(int AccountID, object userState) {
            if ((this.GetAccountByIDOperationCompleted == null)) {
                this.GetAccountByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountByIDOperationCompleted);
            }
            this.InvokeAsync("GetAccountByID", new object[] {
                        AccountID}, this.GetAccountByIDOperationCompleted, userState);
        }
        
        private void OnGetAccountByIDOperationCompleted(object arg) {
            if ((this.GetAccountByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountByIDCompleted(this, new GetAccountByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountBySearch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAccountBySearch(string Search) {
            object[] results = this.Invoke("GetAccountBySearch", new object[] {
                        Search});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountBySearchAsync(string Search) {
            this.GetAccountBySearchAsync(Search, null);
        }
        
        /// <remarks/>
        public void GetAccountBySearchAsync(string Search, object userState) {
            if ((this.GetAccountBySearchOperationCompleted == null)) {
                this.GetAccountBySearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountBySearchOperationCompleted);
            }
            this.InvokeAsync("GetAccountBySearch", new object[] {
                        Search}, this.GetAccountBySearchOperationCompleted, userState);
        }
        
        private void OnGetAccountBySearchOperationCompleted(object arg) {
            if ((this.GetAccountBySearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountBySearchCompleted(this, new GetAccountBySearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUrlByAccountID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUrlByAccountID(int AccountID) {
            object[] results = this.Invoke("GetUrlByAccountID", new object[] {
                        AccountID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUrlByAccountIDAsync(int AccountID) {
            this.GetUrlByAccountIDAsync(AccountID, null);
        }
        
        /// <remarks/>
        public void GetUrlByAccountIDAsync(int AccountID, object userState) {
            if ((this.GetUrlByAccountIDOperationCompleted == null)) {
                this.GetUrlByAccountIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUrlByAccountIDOperationCompleted);
            }
            this.InvokeAsync("GetUrlByAccountID", new object[] {
                        AccountID}, this.GetUrlByAccountIDOperationCompleted, userState);
        }
        
        private void OnGetUrlByAccountIDOperationCompleted(object arg) {
            if ((this.GetUrlByAccountIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUrlByAccountIDCompleted(this, new GetUrlByAccountIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateAccount(int AccountID, string UserName, string Password, int GroupID, string EmployeeName, string Phone) {
            object[] results = this.Invoke("UpdateAccount", new object[] {
                        AccountID,
                        UserName,
                        Password,
                        GroupID,
                        EmployeeName,
                        Phone});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAccountAsync(int AccountID, string UserName, string Password, int GroupID, string EmployeeName, string Phone) {
            this.UpdateAccountAsync(AccountID, UserName, Password, GroupID, EmployeeName, Phone, null);
        }
        
        /// <remarks/>
        public void UpdateAccountAsync(int AccountID, string UserName, string Password, int GroupID, string EmployeeName, string Phone, object userState) {
            if ((this.UpdateAccountOperationCompleted == null)) {
                this.UpdateAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccountOperationCompleted);
            }
            this.InvokeAsync("UpdateAccount", new object[] {
                        AccountID,
                        UserName,
                        Password,
                        GroupID,
                        EmployeeName,
                        Phone}, this.UpdateAccountOperationCompleted, userState);
        }
        
        private void OnUpdateAccountOperationCompleted(object arg) {
            if ((this.UpdateAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAccountCompleted(this, new UpdateAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteAccount(int AccountID) {
            object[] results = this.Invoke("DeleteAccount", new object[] {
                        AccountID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAccountAsync(int AccountID) {
            this.DeleteAccountAsync(AccountID, null);
        }
        
        /// <remarks/>
        public void DeleteAccountAsync(int AccountID, object userState) {
            if ((this.DeleteAccountOperationCompleted == null)) {
                this.DeleteAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAccountOperationCompleted);
            }
            this.InvokeAsync("DeleteAccount", new object[] {
                        AccountID}, this.DeleteAccountOperationCompleted, userState);
        }
        
        private void OnDeleteAccountOperationCompleted(object arg) {
            if ((this.DeleteAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAccountCompleted(this, new DeleteAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllAccountFunction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllAccountFunction() {
            object[] results = this.Invoke("GetAllAccountFunction", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllAccountFunctionAsync() {
            this.GetAllAccountFunctionAsync(null);
        }
        
        /// <remarks/>
        public void GetAllAccountFunctionAsync(object userState) {
            if ((this.GetAllAccountFunctionOperationCompleted == null)) {
                this.GetAllAccountFunctionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllAccountFunctionOperationCompleted);
            }
            this.InvokeAsync("GetAllAccountFunction", new object[0], this.GetAllAccountFunctionOperationCompleted, userState);
        }
        
        private void OnGetAllAccountFunctionOperationCompleted(object arg) {
            if ((this.GetAllAccountFunctionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllAccountFunctionCompleted(this, new GetAllAccountFunctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertAccountFunction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertAccountFunction(int AccountID, int FunctionID) {
            object[] results = this.Invoke("InsertAccountFunction", new object[] {
                        AccountID,
                        FunctionID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertAccountFunctionAsync(int AccountID, int FunctionID) {
            this.InsertAccountFunctionAsync(AccountID, FunctionID, null);
        }
        
        /// <remarks/>
        public void InsertAccountFunctionAsync(int AccountID, int FunctionID, object userState) {
            if ((this.InsertAccountFunctionOperationCompleted == null)) {
                this.InsertAccountFunctionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAccountFunctionOperationCompleted);
            }
            this.InvokeAsync("InsertAccountFunction", new object[] {
                        AccountID,
                        FunctionID}, this.InsertAccountFunctionOperationCompleted, userState);
        }
        
        private void OnInsertAccountFunctionOperationCompleted(object arg) {
            if ((this.InsertAccountFunctionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAccountFunctionCompleted(this, new InsertAccountFunctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllCustomer() {
            object[] results = this.Invoke("GetAllCustomer", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllCustomerAsync() {
            this.GetAllCustomerAsync(null);
        }
        
        /// <remarks/>
        public void GetAllCustomerAsync(object userState) {
            if ((this.GetAllCustomerOperationCompleted == null)) {
                this.GetAllCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllCustomerOperationCompleted);
            }
            this.InvokeAsync("GetAllCustomer", new object[0], this.GetAllCustomerOperationCompleted, userState);
        }
        
        private void OnGetAllCustomerOperationCompleted(object arg) {
            if ((this.GetAllCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllCustomerCompleted(this, new GetAllCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCustomerAllColumn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertCustomerAllColumn(string FirstName, string LastName, string Password, string Sex, string Phone, string Address) {
            object[] results = this.Invoke("InsertCustomerAllColumn", new object[] {
                        FirstName,
                        LastName,
                        Password,
                        Sex,
                        Phone,
                        Address});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertCustomerAllColumnAsync(string FirstName, string LastName, string Password, string Sex, string Phone, string Address) {
            this.InsertCustomerAllColumnAsync(FirstName, LastName, Password, Sex, Phone, Address, null);
        }
        
        /// <remarks/>
        public void InsertCustomerAllColumnAsync(string FirstName, string LastName, string Password, string Sex, string Phone, string Address, object userState) {
            if ((this.InsertCustomerAllColumnOperationCompleted == null)) {
                this.InsertCustomerAllColumnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCustomerAllColumnOperationCompleted);
            }
            this.InvokeAsync("InsertCustomerAllColumn", new object[] {
                        FirstName,
                        LastName,
                        Password,
                        Sex,
                        Phone,
                        Address}, this.InsertCustomerAllColumnOperationCompleted, userState);
        }
        
        private void OnInsertCustomerAllColumnOperationCompleted(object arg) {
            if ((this.InsertCustomerAllColumnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCustomerAllColumnCompleted(this, new InsertCustomerAllColumnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateCustomer(int CustomerID, string FirstName, string LastName, string Password, string Sex, string Phone, string Address) {
            object[] results = this.Invoke("UpdateCustomer", new object[] {
                        CustomerID,
                        FirstName,
                        LastName,
                        Password,
                        Sex,
                        Phone,
                        Address});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCustomerAsync(int CustomerID, string FirstName, string LastName, string Password, string Sex, string Phone, string Address) {
            this.UpdateCustomerAsync(CustomerID, FirstName, LastName, Password, Sex, Phone, Address, null);
        }
        
        /// <remarks/>
        public void UpdateCustomerAsync(int CustomerID, string FirstName, string LastName, string Password, string Sex, string Phone, string Address, object userState) {
            if ((this.UpdateCustomerOperationCompleted == null)) {
                this.UpdateCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCustomerOperationCompleted);
            }
            this.InvokeAsync("UpdateCustomer", new object[] {
                        CustomerID,
                        FirstName,
                        LastName,
                        Password,
                        Sex,
                        Phone,
                        Address}, this.UpdateCustomerOperationCompleted, userState);
        }
        
        private void OnUpdateCustomerOperationCompleted(object arg) {
            if ((this.UpdateCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCustomerCompleted(this, new UpdateCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteCustomer(int CustomerID) {
            object[] results = this.Invoke("DeleteCustomer", new object[] {
                        CustomerID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCustomerAsync(int CustomerID) {
            this.DeleteCustomerAsync(CustomerID, null);
        }
        
        /// <remarks/>
        public void DeleteCustomerAsync(int CustomerID, object userState) {
            if ((this.DeleteCustomerOperationCompleted == null)) {
                this.DeleteCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCustomerOperationCompleted);
            }
            this.InvokeAsync("DeleteCustomer", new object[] {
                        CustomerID}, this.DeleteCustomerOperationCompleted, userState);
        }
        
        private void OnDeleteCustomerOperationCompleted(object arg) {
            if ((this.DeleteCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCustomerCompleted(this, new DeleteCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllEvalute", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllEvalute() {
            object[] results = this.Invoke("GetAllEvalute", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllEvaluteAsync() {
            this.GetAllEvaluteAsync(null);
        }
        
        /// <remarks/>
        public void GetAllEvaluteAsync(object userState) {
            if ((this.GetAllEvaluteOperationCompleted == null)) {
                this.GetAllEvaluteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllEvaluteOperationCompleted);
            }
            this.InvokeAsync("GetAllEvalute", new object[0], this.GetAllEvaluteOperationCompleted, userState);
        }
        
        private void OnGetAllEvaluteOperationCompleted(object arg) {
            if ((this.GetAllEvaluteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllEvaluteCompleted(this, new GetAllEvaluteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEvaluteByProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetEvaluteByProduct(string ProductID) {
            object[] results = this.Invoke("GetEvaluteByProduct", new object[] {
                        ProductID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetEvaluteByProductAsync(string ProductID) {
            this.GetEvaluteByProductAsync(ProductID, null);
        }
        
        /// <remarks/>
        public void GetEvaluteByProductAsync(string ProductID, object userState) {
            if ((this.GetEvaluteByProductOperationCompleted == null)) {
                this.GetEvaluteByProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEvaluteByProductOperationCompleted);
            }
            this.InvokeAsync("GetEvaluteByProduct", new object[] {
                        ProductID}, this.GetEvaluteByProductOperationCompleted, userState);
        }
        
        private void OnGetEvaluteByProductOperationCompleted(object arg) {
            if ((this.GetEvaluteByProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEvaluteByProductCompleted(this, new GetEvaluteByProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEvaluteByRate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetEvaluteByRate(string Rate) {
            object[] results = this.Invoke("GetEvaluteByRate", new object[] {
                        Rate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetEvaluteByRateAsync(string Rate) {
            this.GetEvaluteByRateAsync(Rate, null);
        }
        
        /// <remarks/>
        public void GetEvaluteByRateAsync(string Rate, object userState) {
            if ((this.GetEvaluteByRateOperationCompleted == null)) {
                this.GetEvaluteByRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEvaluteByRateOperationCompleted);
            }
            this.InvokeAsync("GetEvaluteByRate", new object[] {
                        Rate}, this.GetEvaluteByRateOperationCompleted, userState);
        }
        
        private void OnGetEvaluteByRateOperationCompleted(object arg) {
            if ((this.GetEvaluteByRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEvaluteByRateCompleted(this, new GetEvaluteByRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertEvalute", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertEvalute(int CreateBy, string ProductID, string EvaluteContent, int Rate) {
            object[] results = this.Invoke("InsertEvalute", new object[] {
                        CreateBy,
                        ProductID,
                        EvaluteContent,
                        Rate});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertEvaluteAsync(int CreateBy, string ProductID, string EvaluteContent, int Rate) {
            this.InsertEvaluteAsync(CreateBy, ProductID, EvaluteContent, Rate, null);
        }
        
        /// <remarks/>
        public void InsertEvaluteAsync(int CreateBy, string ProductID, string EvaluteContent, int Rate, object userState) {
            if ((this.InsertEvaluteOperationCompleted == null)) {
                this.InsertEvaluteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertEvaluteOperationCompleted);
            }
            this.InvokeAsync("InsertEvalute", new object[] {
                        CreateBy,
                        ProductID,
                        EvaluteContent,
                        Rate}, this.InsertEvaluteOperationCompleted, userState);
        }
        
        private void OnInsertEvaluteOperationCompleted(object arg) {
            if ((this.InsertEvaluteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertEvaluteCompleted(this, new InsertEvaluteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateEvalute", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateEvalute(int EvaluteID, int CreateBy, string ProductID, string EvaluteContent, int Rate) {
            object[] results = this.Invoke("UpdateEvalute", new object[] {
                        EvaluteID,
                        CreateBy,
                        ProductID,
                        EvaluteContent,
                        Rate});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEvaluteAsync(int EvaluteID, int CreateBy, string ProductID, string EvaluteContent, int Rate) {
            this.UpdateEvaluteAsync(EvaluteID, CreateBy, ProductID, EvaluteContent, Rate, null);
        }
        
        /// <remarks/>
        public void UpdateEvaluteAsync(int EvaluteID, int CreateBy, string ProductID, string EvaluteContent, int Rate, object userState) {
            if ((this.UpdateEvaluteOperationCompleted == null)) {
                this.UpdateEvaluteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEvaluteOperationCompleted);
            }
            this.InvokeAsync("UpdateEvalute", new object[] {
                        EvaluteID,
                        CreateBy,
                        ProductID,
                        EvaluteContent,
                        Rate}, this.UpdateEvaluteOperationCompleted, userState);
        }
        
        private void OnUpdateEvaluteOperationCompleted(object arg) {
            if ((this.UpdateEvaluteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEvaluteCompleted(this, new UpdateEvaluteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteEvalute", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteEvalute(int EvaluteID) {
            object[] results = this.Invoke("DeleteEvalute", new object[] {
                        EvaluteID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteEvaluteAsync(int EvaluteID) {
            this.DeleteEvaluteAsync(EvaluteID, null);
        }
        
        /// <remarks/>
        public void DeleteEvaluteAsync(int EvaluteID, object userState) {
            if ((this.DeleteEvaluteOperationCompleted == null)) {
                this.DeleteEvaluteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEvaluteOperationCompleted);
            }
            this.InvokeAsync("DeleteEvalute", new object[] {
                        EvaluteID}, this.DeleteEvaluteOperationCompleted, userState);
        }
        
        private void OnDeleteEvaluteOperationCompleted(object arg) {
            if ((this.DeleteEvaluteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEvaluteCompleted(this, new DeleteEvaluteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllEvent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllEvent() {
            object[] results = this.Invoke("GetAllEvent", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllEventAsync() {
            this.GetAllEventAsync(null);
        }
        
        /// <remarks/>
        public void GetAllEventAsync(object userState) {
            if ((this.GetAllEventOperationCompleted == null)) {
                this.GetAllEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllEventOperationCompleted);
            }
            this.InvokeAsync("GetAllEvent", new object[0], this.GetAllEventOperationCompleted, userState);
        }
        
        private void OnGetAllEventOperationCompleted(object arg) {
            if ((this.GetAllEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllEventCompleted(this, new GetAllEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEventByName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetEventByName(string EventName) {
            object[] results = this.Invoke("GetEventByName", new object[] {
                        EventName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetEventByNameAsync(string EventName) {
            this.GetEventByNameAsync(EventName, null);
        }
        
        /// <remarks/>
        public void GetEventByNameAsync(string EventName, object userState) {
            if ((this.GetEventByNameOperationCompleted == null)) {
                this.GetEventByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEventByNameOperationCompleted);
            }
            this.InvokeAsync("GetEventByName", new object[] {
                        EventName}, this.GetEventByNameOperationCompleted, userState);
        }
        
        private void OnGetEventByNameOperationCompleted(object arg) {
            if ((this.GetEventByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEventByNameCompleted(this, new GetEventByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertEvent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertEvent(string EventName, float Discount) {
            object[] results = this.Invoke("InsertEvent", new object[] {
                        EventName,
                        Discount});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertEventAsync(string EventName, float Discount) {
            this.InsertEventAsync(EventName, Discount, null);
        }
        
        /// <remarks/>
        public void InsertEventAsync(string EventName, float Discount, object userState) {
            if ((this.InsertEventOperationCompleted == null)) {
                this.InsertEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertEventOperationCompleted);
            }
            this.InvokeAsync("InsertEvent", new object[] {
                        EventName,
                        Discount}, this.InsertEventOperationCompleted, userState);
        }
        
        private void OnInsertEventOperationCompleted(object arg) {
            if ((this.InsertEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertEventCompleted(this, new InsertEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateEvent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateEvent(int EventID, string EventName, float Discount) {
            object[] results = this.Invoke("UpdateEvent", new object[] {
                        EventID,
                        EventName,
                        Discount});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEventAsync(int EventID, string EventName, float Discount) {
            this.UpdateEventAsync(EventID, EventName, Discount, null);
        }
        
        /// <remarks/>
        public void UpdateEventAsync(int EventID, string EventName, float Discount, object userState) {
            if ((this.UpdateEventOperationCompleted == null)) {
                this.UpdateEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEventOperationCompleted);
            }
            this.InvokeAsync("UpdateEvent", new object[] {
                        EventID,
                        EventName,
                        Discount}, this.UpdateEventOperationCompleted, userState);
        }
        
        private void OnUpdateEventOperationCompleted(object arg) {
            if ((this.UpdateEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEventCompleted(this, new UpdateEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteEvent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteEvent(int EventID) {
            object[] results = this.Invoke("DeleteEvent", new object[] {
                        EventID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteEventAsync(int EventID) {
            this.DeleteEventAsync(EventID, null);
        }
        
        /// <remarks/>
        public void DeleteEventAsync(int EventID, object userState) {
            if ((this.DeleteEventOperationCompleted == null)) {
                this.DeleteEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEventOperationCompleted);
            }
            this.InvokeAsync("DeleteEvent", new object[] {
                        EventID}, this.DeleteEventOperationCompleted, userState);
        }
        
        private void OnDeleteEventOperationCompleted(object arg) {
            if ((this.DeleteEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEventCompleted(this, new DeleteEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrderDetailByOrderID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOrderDetailByOrderID(int OrderID) {
            object[] results = this.Invoke("GetOrderDetailByOrderID", new object[] {
                        OrderID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderDetailByOrderIDAsync(int OrderID) {
            this.GetOrderDetailByOrderIDAsync(OrderID, null);
        }
        
        /// <remarks/>
        public void GetOrderDetailByOrderIDAsync(int OrderID, object userState) {
            if ((this.GetOrderDetailByOrderIDOperationCompleted == null)) {
                this.GetOrderDetailByOrderIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderDetailByOrderIDOperationCompleted);
            }
            this.InvokeAsync("GetOrderDetailByOrderID", new object[] {
                        OrderID}, this.GetOrderDetailByOrderIDOperationCompleted, userState);
        }
        
        private void OnGetOrderDetailByOrderIDOperationCompleted(object arg) {
            if ((this.GetOrderDetailByOrderIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderDetailByOrderIDCompleted(this, new GetOrderDetailByOrderIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReiveDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetReiveDate() {
            object[] results = this.Invoke("GetReiveDate", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetReiveDateAsync() {
            this.GetReiveDateAsync(null);
        }
        
        /// <remarks/>
        public void GetReiveDateAsync(object userState) {
            if ((this.GetReiveDateOperationCompleted == null)) {
                this.GetReiveDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReiveDateOperationCompleted);
            }
            this.InvokeAsync("GetReiveDate", new object[0], this.GetReiveDateOperationCompleted, userState);
        }
        
        private void OnGetReiveDateOperationCompleted(object arg) {
            if ((this.GetReiveDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReiveDateCompleted(this, new GetReiveDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllOrder() {
            object[] results = this.Invoke("GetAllOrder", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllOrderAsync() {
            this.GetAllOrderAsync(null);
        }
        
        /// <remarks/>
        public void GetAllOrderAsync(object userState) {
            if ((this.GetAllOrderOperationCompleted == null)) {
                this.GetAllOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllOrderOperationCompleted);
            }
            this.InvokeAsync("GetAllOrder", new object[0], this.GetAllOrderOperationCompleted, userState);
        }
        
        private void OnGetAllOrderOperationCompleted(object arg) {
            if ((this.GetAllOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllOrderCompleted(this, new GetAllOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllSupplier", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllSupplier() {
            object[] results = this.Invoke("GetAllSupplier", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllSupplierAsync() {
            this.GetAllSupplierAsync(null);
        }
        
        /// <remarks/>
        public void GetAllSupplierAsync(object userState) {
            if ((this.GetAllSupplierOperationCompleted == null)) {
                this.GetAllSupplierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllSupplierOperationCompleted);
            }
            this.InvokeAsync("GetAllSupplier", new object[0], this.GetAllSupplierOperationCompleted, userState);
        }
        
        private void OnGetAllSupplierOperationCompleted(object arg) {
            if ((this.GetAllSupplierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllSupplierCompleted(this, new GetAllSupplierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllSupplierByName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllSupplierByName(string SupplierName) {
            object[] results = this.Invoke("GetAllSupplierByName", new object[] {
                        SupplierName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllSupplierByNameAsync(string SupplierName) {
            this.GetAllSupplierByNameAsync(SupplierName, null);
        }
        
        /// <remarks/>
        public void GetAllSupplierByNameAsync(string SupplierName, object userState) {
            if ((this.GetAllSupplierByNameOperationCompleted == null)) {
                this.GetAllSupplierByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllSupplierByNameOperationCompleted);
            }
            this.InvokeAsync("GetAllSupplierByName", new object[] {
                        SupplierName}, this.GetAllSupplierByNameOperationCompleted, userState);
        }
        
        private void OnGetAllSupplierByNameOperationCompleted(object arg) {
            if ((this.GetAllSupplierByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllSupplierByNameCompleted(this, new GetAllSupplierByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertSupplier", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertSupplier(string SupplierName, string Address, string Phone) {
            object[] results = this.Invoke("InsertSupplier", new object[] {
                        SupplierName,
                        Address,
                        Phone});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertSupplierAsync(string SupplierName, string Address, string Phone) {
            this.InsertSupplierAsync(SupplierName, Address, Phone, null);
        }
        
        /// <remarks/>
        public void InsertSupplierAsync(string SupplierName, string Address, string Phone, object userState) {
            if ((this.InsertSupplierOperationCompleted == null)) {
                this.InsertSupplierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertSupplierOperationCompleted);
            }
            this.InvokeAsync("InsertSupplier", new object[] {
                        SupplierName,
                        Address,
                        Phone}, this.InsertSupplierOperationCompleted, userState);
        }
        
        private void OnInsertSupplierOperationCompleted(object arg) {
            if ((this.InsertSupplierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertSupplierCompleted(this, new InsertSupplierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateSupplier", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateSupplier(int SupplierID, string SupplierName, string Address, string Phone) {
            object[] results = this.Invoke("UpdateSupplier", new object[] {
                        SupplierID,
                        SupplierName,
                        Address,
                        Phone});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSupplierAsync(int SupplierID, string SupplierName, string Address, string Phone) {
            this.UpdateSupplierAsync(SupplierID, SupplierName, Address, Phone, null);
        }
        
        /// <remarks/>
        public void UpdateSupplierAsync(int SupplierID, string SupplierName, string Address, string Phone, object userState) {
            if ((this.UpdateSupplierOperationCompleted == null)) {
                this.UpdateSupplierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSupplierOperationCompleted);
            }
            this.InvokeAsync("UpdateSupplier", new object[] {
                        SupplierID,
                        SupplierName,
                        Address,
                        Phone}, this.UpdateSupplierOperationCompleted, userState);
        }
        
        private void OnUpdateSupplierOperationCompleted(object arg) {
            if ((this.UpdateSupplierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSupplierCompleted(this, new UpdateSupplierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteSupplier", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteSupplier(int SupplierID) {
            object[] results = this.Invoke("DeleteSupplier", new object[] {
                        SupplierID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSupplierAsync(int SupplierID) {
            this.DeleteSupplierAsync(SupplierID, null);
        }
        
        /// <remarks/>
        public void DeleteSupplierAsync(int SupplierID, object userState) {
            if ((this.DeleteSupplierOperationCompleted == null)) {
                this.DeleteSupplierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSupplierOperationCompleted);
            }
            this.InvokeAsync("DeleteSupplier", new object[] {
                        SupplierID}, this.DeleteSupplierOperationCompleted, userState);
        }
        
        private void OnDeleteSupplierOperationCompleted(object arg) {
            if ((this.DeleteSupplierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSupplierCompleted(this, new DeleteSupplierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllBanking", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllBanking() {
            object[] results = this.Invoke("GetAllBanking", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllBankingAsync() {
            this.GetAllBankingAsync(null);
        }
        
        /// <remarks/>
        public void GetAllBankingAsync(object userState) {
            if ((this.GetAllBankingOperationCompleted == null)) {
                this.GetAllBankingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllBankingOperationCompleted);
            }
            this.InvokeAsync("GetAllBanking", new object[0], this.GetAllBankingOperationCompleted, userState);
        }
        
        private void OnGetAllBankingOperationCompleted(object arg) {
            if ((this.GetAllBankingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllBankingCompleted(this, new GetAllBankingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllBankingByName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllBankingByName(string BankingName) {
            object[] results = this.Invoke("GetAllBankingByName", new object[] {
                        BankingName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllBankingByNameAsync(string BankingName) {
            this.GetAllBankingByNameAsync(BankingName, null);
        }
        
        /// <remarks/>
        public void GetAllBankingByNameAsync(string BankingName, object userState) {
            if ((this.GetAllBankingByNameOperationCompleted == null)) {
                this.GetAllBankingByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllBankingByNameOperationCompleted);
            }
            this.InvokeAsync("GetAllBankingByName", new object[] {
                        BankingName}, this.GetAllBankingByNameOperationCompleted, userState);
        }
        
        private void OnGetAllBankingByNameOperationCompleted(object arg) {
            if ((this.GetAllBankingByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllBankingByNameCompleted(this, new GetAllBankingByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertBanking", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertBanking(string BankingName, string Number, int CustomerID, int OrderID, float Total) {
            object[] results = this.Invoke("InsertBanking", new object[] {
                        BankingName,
                        Number,
                        CustomerID,
                        OrderID,
                        Total});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertBankingAsync(string BankingName, string Number, int CustomerID, int OrderID, float Total) {
            this.InsertBankingAsync(BankingName, Number, CustomerID, OrderID, Total, null);
        }
        
        /// <remarks/>
        public void InsertBankingAsync(string BankingName, string Number, int CustomerID, int OrderID, float Total, object userState) {
            if ((this.InsertBankingOperationCompleted == null)) {
                this.InsertBankingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBankingOperationCompleted);
            }
            this.InvokeAsync("InsertBanking", new object[] {
                        BankingName,
                        Number,
                        CustomerID,
                        OrderID,
                        Total}, this.InsertBankingOperationCompleted, userState);
        }
        
        private void OnInsertBankingOperationCompleted(object arg) {
            if ((this.InsertBankingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBankingCompleted(this, new InsertBankingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateBanking", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateBanking(int BankingID, string BankingName, string Number, int CustomerID, int OrderID, float Total) {
            object[] results = this.Invoke("UpdateBanking", new object[] {
                        BankingID,
                        BankingName,
                        Number,
                        CustomerID,
                        OrderID,
                        Total});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBankingAsync(int BankingID, string BankingName, string Number, int CustomerID, int OrderID, float Total) {
            this.UpdateBankingAsync(BankingID, BankingName, Number, CustomerID, OrderID, Total, null);
        }
        
        /// <remarks/>
        public void UpdateBankingAsync(int BankingID, string BankingName, string Number, int CustomerID, int OrderID, float Total, object userState) {
            if ((this.UpdateBankingOperationCompleted == null)) {
                this.UpdateBankingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBankingOperationCompleted);
            }
            this.InvokeAsync("UpdateBanking", new object[] {
                        BankingID,
                        BankingName,
                        Number,
                        CustomerID,
                        OrderID,
                        Total}, this.UpdateBankingOperationCompleted, userState);
        }
        
        private void OnUpdateBankingOperationCompleted(object arg) {
            if ((this.UpdateBankingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBankingCompleted(this, new UpdateBankingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteBanking", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteBanking(int BankingID) {
            object[] results = this.Invoke("DeleteBanking", new object[] {
                        BankingID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteBankingAsync(int BankingID) {
            this.DeleteBankingAsync(BankingID, null);
        }
        
        /// <remarks/>
        public void DeleteBankingAsync(int BankingID, object userState) {
            if ((this.DeleteBankingOperationCompleted == null)) {
                this.DeleteBankingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBankingOperationCompleted);
            }
            this.InvokeAsync("DeleteBanking", new object[] {
                        BankingID}, this.DeleteBankingOperationCompleted, userState);
        }
        
        private void OnDeleteBankingOperationCompleted(object arg) {
            if ((this.DeleteBankingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBankingCompleted(this, new DeleteBankingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllRecipient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllRecipient() {
            object[] results = this.Invoke("GetAllRecipient", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRecipientAsync() {
            this.GetAllRecipientAsync(null);
        }
        
        /// <remarks/>
        public void GetAllRecipientAsync(object userState) {
            if ((this.GetAllRecipientOperationCompleted == null)) {
                this.GetAllRecipientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRecipientOperationCompleted);
            }
            this.InvokeAsync("GetAllRecipient", new object[0], this.GetAllRecipientOperationCompleted, userState);
        }
        
        private void OnGetAllRecipientOperationCompleted(object arg) {
            if ((this.GetAllRecipientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRecipientCompleted(this, new GetAllRecipientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRecipientBySearch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRecipientBySearch(string Search) {
            object[] results = this.Invoke("GetRecipientBySearch", new object[] {
                        Search});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRecipientBySearchAsync(string Search) {
            this.GetRecipientBySearchAsync(Search, null);
        }
        
        /// <remarks/>
        public void GetRecipientBySearchAsync(string Search, object userState) {
            if ((this.GetRecipientBySearchOperationCompleted == null)) {
                this.GetRecipientBySearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecipientBySearchOperationCompleted);
            }
            this.InvokeAsync("GetRecipientBySearch", new object[] {
                        Search}, this.GetRecipientBySearchOperationCompleted, userState);
        }
        
        private void OnGetRecipientBySearchOperationCompleted(object arg) {
            if ((this.GetRecipientBySearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecipientBySearchCompleted(this, new GetRecipientBySearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertRecipient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertRecipient(string RecipientName, string Address, string Phone, int CustomerID) {
            object[] results = this.Invoke("InsertRecipient", new object[] {
                        RecipientName,
                        Address,
                        Phone,
                        CustomerID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertRecipientAsync(string RecipientName, string Address, string Phone, int CustomerID) {
            this.InsertRecipientAsync(RecipientName, Address, Phone, CustomerID, null);
        }
        
        /// <remarks/>
        public void InsertRecipientAsync(string RecipientName, string Address, string Phone, int CustomerID, object userState) {
            if ((this.InsertRecipientOperationCompleted == null)) {
                this.InsertRecipientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertRecipientOperationCompleted);
            }
            this.InvokeAsync("InsertRecipient", new object[] {
                        RecipientName,
                        Address,
                        Phone,
                        CustomerID}, this.InsertRecipientOperationCompleted, userState);
        }
        
        private void OnInsertRecipientOperationCompleted(object arg) {
            if ((this.InsertRecipientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertRecipientCompleted(this, new InsertRecipientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateRecipient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateRecipient(int RecipientID, string RecipientName, string Address, string Phone, int CustomerID) {
            object[] results = this.Invoke("UpdateRecipient", new object[] {
                        RecipientID,
                        RecipientName,
                        Address,
                        Phone,
                        CustomerID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRecipientAsync(int RecipientID, string RecipientName, string Address, string Phone, int CustomerID) {
            this.UpdateRecipientAsync(RecipientID, RecipientName, Address, Phone, CustomerID, null);
        }
        
        /// <remarks/>
        public void UpdateRecipientAsync(int RecipientID, string RecipientName, string Address, string Phone, int CustomerID, object userState) {
            if ((this.UpdateRecipientOperationCompleted == null)) {
                this.UpdateRecipientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRecipientOperationCompleted);
            }
            this.InvokeAsync("UpdateRecipient", new object[] {
                        RecipientID,
                        RecipientName,
                        Address,
                        Phone,
                        CustomerID}, this.UpdateRecipientOperationCompleted, userState);
        }
        
        private void OnUpdateRecipientOperationCompleted(object arg) {
            if ((this.UpdateRecipientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRecipientCompleted(this, new UpdateRecipientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteRecipient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteRecipient(int RecipientID) {
            object[] results = this.Invoke("DeleteRecipient", new object[] {
                        RecipientID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteRecipientAsync(int RecipientID) {
            this.DeleteRecipientAsync(RecipientID, null);
        }
        
        /// <remarks/>
        public void DeleteRecipientAsync(int RecipientID, object userState) {
            if ((this.DeleteRecipientOperationCompleted == null)) {
                this.DeleteRecipientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRecipientOperationCompleted);
            }
            this.InvokeAsync("DeleteRecipient", new object[] {
                        RecipientID}, this.DeleteRecipientOperationCompleted, userState);
        }
        
        private void OnDeleteRecipientOperationCompleted(object arg) {
            if ((this.DeleteRecipientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRecipientCompleted(this, new DeleteRecipientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllGroup() {
            object[] results = this.Invoke("GetAllGroup", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllGroupAsync() {
            this.GetAllGroupAsync(null);
        }
        
        /// <remarks/>
        public void GetAllGroupAsync(object userState) {
            if ((this.GetAllGroupOperationCompleted == null)) {
                this.GetAllGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllGroupOperationCompleted);
            }
            this.InvokeAsync("GetAllGroup", new object[0], this.GetAllGroupOperationCompleted, userState);
        }
        
        private void OnGetAllGroupOperationCompleted(object arg) {
            if ((this.GetAllGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllGroupCompleted(this, new GetAllGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGroupByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetGroupByID(int GroupID) {
            object[] results = this.Invoke("GetGroupByID", new object[] {
                        GroupID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupByIDAsync(int GroupID) {
            this.GetGroupByIDAsync(GroupID, null);
        }
        
        /// <remarks/>
        public void GetGroupByIDAsync(int GroupID, object userState) {
            if ((this.GetGroupByIDOperationCompleted == null)) {
                this.GetGroupByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupByIDOperationCompleted);
            }
            this.InvokeAsync("GetGroupByID", new object[] {
                        GroupID}, this.GetGroupByIDOperationCompleted, userState);
        }
        
        private void OnGetGroupByIDOperationCompleted(object arg) {
            if ((this.GetGroupByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupByIDCompleted(this, new GetGroupByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertGroup(string GroupName) {
            object[] results = this.Invoke("InsertGroup", new object[] {
                        GroupName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertGroupAsync(string GroupName) {
            this.InsertGroupAsync(GroupName, null);
        }
        
        /// <remarks/>
        public void InsertGroupAsync(string GroupName, object userState) {
            if ((this.InsertGroupOperationCompleted == null)) {
                this.InsertGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertGroupOperationCompleted);
            }
            this.InvokeAsync("InsertGroup", new object[] {
                        GroupName}, this.InsertGroupOperationCompleted, userState);
        }
        
        private void OnInsertGroupOperationCompleted(object arg) {
            if ((this.InsertGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertGroupCompleted(this, new InsertGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateGroup(int GroupID, string GroupName) {
            object[] results = this.Invoke("UpdateGroup", new object[] {
                        GroupID,
                        GroupName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateGroupAsync(int GroupID, string GroupName) {
            this.UpdateGroupAsync(GroupID, GroupName, null);
        }
        
        /// <remarks/>
        public void UpdateGroupAsync(int GroupID, string GroupName, object userState) {
            if ((this.UpdateGroupOperationCompleted == null)) {
                this.UpdateGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGroupOperationCompleted);
            }
            this.InvokeAsync("UpdateGroup", new object[] {
                        GroupID,
                        GroupName}, this.UpdateGroupOperationCompleted, userState);
        }
        
        private void OnUpdateGroupOperationCompleted(object arg) {
            if ((this.UpdateGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGroupCompleted(this, new UpdateGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteGroup(int GroupID) {
            object[] results = this.Invoke("DeleteGroup", new object[] {
                        GroupID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteGroupAsync(int GroupID) {
            this.DeleteGroupAsync(GroupID, null);
        }
        
        /// <remarks/>
        public void DeleteGroupAsync(int GroupID, object userState) {
            if ((this.DeleteGroupOperationCompleted == null)) {
                this.DeleteGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGroupOperationCompleted);
            }
            this.InvokeAsync("DeleteGroup", new object[] {
                        GroupID}, this.DeleteGroupOperationCompleted, userState);
        }
        
        private void OnDeleteGroupOperationCompleted(object arg) {
            if ((this.DeleteGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteGroupCompleted(this, new DeleteGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllFunction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllFunction() {
            object[] results = this.Invoke("GetAllFunction", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllFunctionAsync() {
            this.GetAllFunctionAsync(null);
        }
        
        /// <remarks/>
        public void GetAllFunctionAsync(object userState) {
            if ((this.GetAllFunctionOperationCompleted == null)) {
                this.GetAllFunctionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllFunctionOperationCompleted);
            }
            this.InvokeAsync("GetAllFunction", new object[0], this.GetAllFunctionOperationCompleted, userState);
        }
        
        private void OnGetAllFunctionOperationCompleted(object arg) {
            if ((this.GetAllFunctionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllFunctionCompleted(this, new GetAllFunctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFunctionByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFunctionByID(int FunctionID) {
            object[] results = this.Invoke("GetFunctionByID", new object[] {
                        FunctionID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFunctionByIDAsync(int FunctionID) {
            this.GetFunctionByIDAsync(FunctionID, null);
        }
        
        /// <remarks/>
        public void GetFunctionByIDAsync(int FunctionID, object userState) {
            if ((this.GetFunctionByIDOperationCompleted == null)) {
                this.GetFunctionByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFunctionByIDOperationCompleted);
            }
            this.InvokeAsync("GetFunctionByID", new object[] {
                        FunctionID}, this.GetFunctionByIDOperationCompleted, userState);
        }
        
        private void OnGetFunctionByIDOperationCompleted(object arg) {
            if ((this.GetFunctionByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFunctionByIDCompleted(this, new GetFunctionByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertFunction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertFunction(string FunctionName, string BaseUrl) {
            object[] results = this.Invoke("InsertFunction", new object[] {
                        FunctionName,
                        BaseUrl});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertFunctionAsync(string FunctionName, string BaseUrl) {
            this.InsertFunctionAsync(FunctionName, BaseUrl, null);
        }
        
        /// <remarks/>
        public void InsertFunctionAsync(string FunctionName, string BaseUrl, object userState) {
            if ((this.InsertFunctionOperationCompleted == null)) {
                this.InsertFunctionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertFunctionOperationCompleted);
            }
            this.InvokeAsync("InsertFunction", new object[] {
                        FunctionName,
                        BaseUrl}, this.InsertFunctionOperationCompleted, userState);
        }
        
        private void OnInsertFunctionOperationCompleted(object arg) {
            if ((this.InsertFunctionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertFunctionCompleted(this, new InsertFunctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateFunction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateFunction(int FunctionID, string FunctionName, string BaseUrl) {
            object[] results = this.Invoke("UpdateFunction", new object[] {
                        FunctionID,
                        FunctionName,
                        BaseUrl});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateFunctionAsync(int FunctionID, string FunctionName, string BaseUrl) {
            this.UpdateFunctionAsync(FunctionID, FunctionName, BaseUrl, null);
        }
        
        /// <remarks/>
        public void UpdateFunctionAsync(int FunctionID, string FunctionName, string BaseUrl, object userState) {
            if ((this.UpdateFunctionOperationCompleted == null)) {
                this.UpdateFunctionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFunctionOperationCompleted);
            }
            this.InvokeAsync("UpdateFunction", new object[] {
                        FunctionID,
                        FunctionName,
                        BaseUrl}, this.UpdateFunctionOperationCompleted, userState);
        }
        
        private void OnUpdateFunctionOperationCompleted(object arg) {
            if ((this.UpdateFunctionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFunctionCompleted(this, new UpdateFunctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFunction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteFunction(int FunctionID) {
            object[] results = this.Invoke("DeleteFunction", new object[] {
                        FunctionID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFunctionAsync(int FunctionID) {
            this.DeleteFunctionAsync(FunctionID, null);
        }
        
        /// <remarks/>
        public void DeleteFunctionAsync(int FunctionID, object userState) {
            if ((this.DeleteFunctionOperationCompleted == null)) {
                this.DeleteFunctionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFunctionOperationCompleted);
            }
            this.InvokeAsync("DeleteFunction", new object[] {
                        FunctionID}, this.DeleteFunctionOperationCompleted, userState);
        }
        
        private void OnDeleteFunctionOperationCompleted(object arg) {
            if ((this.DeleteFunctionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFunctionCompleted(this, new DeleteFunctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAllMessageCompletedEventHandler(object sender, GetAllMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetMessageByCategoryCompletedEventHandler(object sender, GetMessageByCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageByCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageByCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertMessageCompletedEventHandler(object sender, InsertMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateMessageCompletedEventHandler(object sender, UpdateMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteMessageCompletedEventHandler(object sender, DeleteMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ShowAllProductCompletedEventHandler(object sender, ShowAllProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShowAllProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShowAllProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAllProductCompletedEventHandler(object sender, GetAllProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCountProductCompletedEventHandler(object sender, GetCountProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetProductByCategoryCompletedEventHandler(object sender, GetProductByCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductByCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductByCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetProductBySearchCompletedEventHandler(object sender, GetProductBySearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductBySearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductBySearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertProductCompletedEventHandler(object sender, InsertProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateProductCompletedEventHandler(object sender, UpdateProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteProductCompletedEventHandler(object sender, DeleteProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAllCategoryCompletedEventHandler(object sender, GetAllCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCategoryNameCompletedEventHandler(object sender, GetCategoryNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCategoryNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCategoryNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertCategoryCompletedEventHandler(object sender, InsertCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateCategoryCompletedEventHandler(object sender, UpdateCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteCategoryCompletedEventHandler(object sender, DeleteCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CheckLoginCustomerCompletedEventHandler(object sender, CheckLoginCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckLoginCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckLoginCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCustomerByPhoneCompletedEventHandler(object sender, GetCustomerByPhoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerByPhoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerByPhoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CheckLoginAccountCompletedEventHandler(object sender, CheckLoginAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckLoginAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckLoginAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAccountByPhoneCompletedEventHandler(object sender, GetAccountByPhoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountByPhoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountByPhoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RegisterCustomerCompletedEventHandler(object sender, RegisterCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RegisterAccountCompletedEventHandler(object sender, RegisterAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAllAccountCompletedEventHandler(object sender, GetAllAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAccountByIDCompletedEventHandler(object sender, GetAccountByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAccountBySearchCompletedEventHandler(object sender, GetAccountBySearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountBySearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountBySearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetUrlByAccountIDCompletedEventHandler(object sender, GetUrlByAccountIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUrlByAccountIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUrlByAccountIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateAccountCompletedEventHandler(object sender, UpdateAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteAccountCompletedEventHandler(object sender, DeleteAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAllAccountFunctionCompletedEventHandler(object sender, GetAllAccountFunctionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllAccountFunctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllAccountFunctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertAccountFunctionCompletedEventHandler(object sender, InsertAccountFunctionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertAccountFunctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertAccountFunctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAllCustomerCompletedEventHandler(object sender, GetAllCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertCustomerAllColumnCompletedEventHandler(object sender, InsertCustomerAllColumnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCustomerAllColumnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCustomerAllColumnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateCustomerCompletedEventHandler(object sender, UpdateCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteCustomerCompletedEventHandler(object sender, DeleteCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAllEvaluteCompletedEventHandler(object sender, GetAllEvaluteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllEvaluteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllEvaluteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetEvaluteByProductCompletedEventHandler(object sender, GetEvaluteByProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEvaluteByProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEvaluteByProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetEvaluteByRateCompletedEventHandler(object sender, GetEvaluteByRateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEvaluteByRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEvaluteByRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertEvaluteCompletedEventHandler(object sender, InsertEvaluteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertEvaluteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertEvaluteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateEvaluteCompletedEventHandler(object sender, UpdateEvaluteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEvaluteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEvaluteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteEvaluteCompletedEventHandler(object sender, DeleteEvaluteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteEvaluteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteEvaluteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAllEventCompletedEventHandler(object sender, GetAllEventCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetEventByNameCompletedEventHandler(object sender, GetEventByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEventByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEventByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertEventCompletedEventHandler(object sender, InsertEventCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateEventCompletedEventHandler(object sender, UpdateEventCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteEventCompletedEventHandler(object sender, DeleteEventCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetOrderDetailByOrderIDCompletedEventHandler(object sender, GetOrderDetailByOrderIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderDetailByOrderIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderDetailByOrderIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetReiveDateCompletedEventHandler(object sender, GetReiveDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReiveDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReiveDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAllOrderCompletedEventHandler(object sender, GetAllOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAllSupplierCompletedEventHandler(object sender, GetAllSupplierCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllSupplierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllSupplierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAllSupplierByNameCompletedEventHandler(object sender, GetAllSupplierByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllSupplierByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllSupplierByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertSupplierCompletedEventHandler(object sender, InsertSupplierCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertSupplierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertSupplierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateSupplierCompletedEventHandler(object sender, UpdateSupplierCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSupplierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSupplierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteSupplierCompletedEventHandler(object sender, DeleteSupplierCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSupplierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSupplierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAllBankingCompletedEventHandler(object sender, GetAllBankingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllBankingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllBankingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAllBankingByNameCompletedEventHandler(object sender, GetAllBankingByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllBankingByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllBankingByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertBankingCompletedEventHandler(object sender, InsertBankingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertBankingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertBankingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateBankingCompletedEventHandler(object sender, UpdateBankingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBankingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBankingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteBankingCompletedEventHandler(object sender, DeleteBankingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteBankingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteBankingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAllRecipientCompletedEventHandler(object sender, GetAllRecipientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRecipientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRecipientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetRecipientBySearchCompletedEventHandler(object sender, GetRecipientBySearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecipientBySearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecipientBySearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertRecipientCompletedEventHandler(object sender, InsertRecipientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertRecipientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertRecipientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateRecipientCompletedEventHandler(object sender, UpdateRecipientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRecipientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRecipientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteRecipientCompletedEventHandler(object sender, DeleteRecipientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteRecipientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteRecipientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAllGroupCompletedEventHandler(object sender, GetAllGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetGroupByIDCompletedEventHandler(object sender, GetGroupByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertGroupCompletedEventHandler(object sender, InsertGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateGroupCompletedEventHandler(object sender, UpdateGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteGroupCompletedEventHandler(object sender, DeleteGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAllFunctionCompletedEventHandler(object sender, GetAllFunctionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllFunctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllFunctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetFunctionByIDCompletedEventHandler(object sender, GetFunctionByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFunctionByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFunctionByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertFunctionCompletedEventHandler(object sender, InsertFunctionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertFunctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertFunctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateFunctionCompletedEventHandler(object sender, UpdateFunctionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFunctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFunctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteFunctionCompletedEventHandler(object sender, DeleteFunctionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFunctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFunctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591