//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Florist_Client.api_product {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class WebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetAllMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllMessageByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback createMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateMessageByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback createMessageAdminOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteMessageAdminOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMessageMaxOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageByCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllProductsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllProductsIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductByCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkExitsProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateProductByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteProductsByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertGetProductByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCategoryNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkLoginCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkRegistrationCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback registrationCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback getInformationCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkPhoneExitsOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkPasswordExitsOperationCompleted;
        
        private System.Threading.SendOrPostCallback changePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateCustomerByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllEvaluteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllEvaluteByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEvaluteByProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountEvaluteByRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAddressByCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAddressByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAddressMaxOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertAddressByCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateAddressByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAddressByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback getOrderMaxOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderDetailByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderDetailByDetailsIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertOrderDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertBankingOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllAdminOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllAdminByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkLoginAdminOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginAccountAdminOperationCompleted;
        
        private System.Threading.SendOrPostCallback getListUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertAccountAdminOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateAdminByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAdminByAdminOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllSupplierOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllSupplierByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertSupplierOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSupplierOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSupplierOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCategoryIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEvaluteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteCustomerOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService() {
            this.Url = global::Florist_Client.Properties.Settings.Default.Florist_Client_api_product_WebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetAllMessageCompletedEventHandler GetAllMessageCompleted;
        
        /// <remarks/>
        public event GetAllMessageByIDCompletedEventHandler GetAllMessageByIDCompleted;
        
        /// <remarks/>
        public event GetAllMessagesCompletedEventHandler GetAllMessagesCompleted;
        
        /// <remarks/>
        public event createMessageCompletedEventHandler createMessageCompleted;
        
        /// <remarks/>
        public event updateMessageByIDCompletedEventHandler updateMessageByIDCompleted;
        
        /// <remarks/>
        public event createMessageAdminCompletedEventHandler createMessageAdminCompleted;
        
        /// <remarks/>
        public event deleteMessageAdminCompletedEventHandler deleteMessageAdminCompleted;
        
        /// <remarks/>
        public event getMessageMaxCompletedEventHandler getMessageMaxCompleted;
        
        /// <remarks/>
        public event GetMessageByCategoryCompletedEventHandler GetMessageByCategoryCompleted;
        
        /// <remarks/>
        public event GetCountProductCompletedEventHandler GetCountProductCompleted;
        
        /// <remarks/>
        public event GetAllProductCompletedEventHandler GetAllProductCompleted;
        
        /// <remarks/>
        public event GetAllProductsCompletedEventHandler GetAllProductsCompleted;
        
        /// <remarks/>
        public event GetAllProductsIDCompletedEventHandler GetAllProductsIDCompleted;
        
        /// <remarks/>
        public event GetProductByCategoryCompletedEventHandler GetProductByCategoryCompleted;
        
        /// <remarks/>
        public event GetProductByIDCompletedEventHandler GetProductByIDCompleted;
        
        /// <remarks/>
        public event checkExitsProductCompletedEventHandler checkExitsProductCompleted;
        
        /// <remarks/>
        public event updateProductByIDCompletedEventHandler updateProductByIDCompleted;
        
        /// <remarks/>
        public event deleteProductsByIDCompletedEventHandler deleteProductsByIDCompleted;
        
        /// <remarks/>
        public event insertGetProductByIDCompletedEventHandler insertGetProductByIDCompleted;
        
        /// <remarks/>
        public event GetCategoryNameCompletedEventHandler GetCategoryNameCompleted;
        
        /// <remarks/>
        public event LoginAccountCompletedEventHandler LoginAccountCompleted;
        
        /// <remarks/>
        public event LoginCustomerCompletedEventHandler LoginCustomerCompleted;
        
        /// <remarks/>
        public event checkLoginCustomerCompletedEventHandler checkLoginCustomerCompleted;
        
        /// <remarks/>
        public event checkRegistrationCustomerCompletedEventHandler checkRegistrationCustomerCompleted;
        
        /// <remarks/>
        public event registrationCustomerCompletedEventHandler registrationCustomerCompleted;
        
        /// <remarks/>
        public event getInformationCustomerCompletedEventHandler getInformationCustomerCompleted;
        
        /// <remarks/>
        public event checkPhoneExitsCompletedEventHandler checkPhoneExitsCompleted;
        
        /// <remarks/>
        public event checkPasswordExitsCompletedEventHandler checkPasswordExitsCompleted;
        
        /// <remarks/>
        public event changePasswordCompletedEventHandler changePasswordCompleted;
        
        /// <remarks/>
        public event updateCustomerByIdCompletedEventHandler updateCustomerByIdCompleted;
        
        /// <remarks/>
        public event GetAllEvaluteCompletedEventHandler GetAllEvaluteCompleted;
        
        /// <remarks/>
        public event GetAllEvaluteByIDCompletedEventHandler GetAllEvaluteByIDCompleted;
        
        /// <remarks/>
        public event GetEvaluteByProductCompletedEventHandler GetEvaluteByProductCompleted;
        
        /// <remarks/>
        public event GetCountEvaluteByRateCompletedEventHandler GetCountEvaluteByRateCompleted;
        
        /// <remarks/>
        public event getAddressByCustomerCompletedEventHandler getAddressByCustomerCompleted;
        
        /// <remarks/>
        public event getAddressByIDCompletedEventHandler getAddressByIDCompleted;
        
        /// <remarks/>
        public event getAddressMaxCompletedEventHandler getAddressMaxCompleted;
        
        /// <remarks/>
        public event insertAddressByCustomerCompletedEventHandler insertAddressByCustomerCompleted;
        
        /// <remarks/>
        public event updateAddressByIDCompletedEventHandler updateAddressByIDCompleted;
        
        /// <remarks/>
        public event deleteAddressByIDCompletedEventHandler deleteAddressByIDCompleted;
        
        /// <remarks/>
        public event GetAllOrderCompletedEventHandler GetAllOrderCompleted;
        
        /// <remarks/>
        public event GetOrderByIDCompletedEventHandler GetOrderByIDCompleted;
        
        /// <remarks/>
        public event insertOrderCompletedEventHandler insertOrderCompleted;
        
        /// <remarks/>
        public event getOrderMaxCompletedEventHandler getOrderMaxCompleted;
        
        /// <remarks/>
        public event GetOrderDetailByIDCompletedEventHandler GetOrderDetailByIDCompleted;
        
        /// <remarks/>
        public event GetOrderDetailByDetailsIDCompletedEventHandler GetOrderDetailByDetailsIDCompleted;
        
        /// <remarks/>
        public event insertOrderDetailsCompletedEventHandler insertOrderDetailsCompleted;
        
        /// <remarks/>
        public event insertBankingCompletedEventHandler insertBankingCompleted;
        
        /// <remarks/>
        public event getAllAdminCompletedEventHandler getAllAdminCompleted;
        
        /// <remarks/>
        public event getAllAdminByIDCompletedEventHandler getAllAdminByIDCompleted;
        
        /// <remarks/>
        public event checkLoginAdminCompletedEventHandler checkLoginAdminCompleted;
        
        /// <remarks/>
        public event LoginAccountAdminCompletedEventHandler LoginAccountAdminCompleted;
        
        /// <remarks/>
        public event getListUrlCompletedEventHandler getListUrlCompleted;
        
        /// <remarks/>
        public event insertAccountAdminCompletedEventHandler insertAccountAdminCompleted;
        
        /// <remarks/>
        public event updateAdminByIDCompletedEventHandler updateAdminByIDCompleted;
        
        /// <remarks/>
        public event deleteAdminByAdminCompletedEventHandler deleteAdminByAdminCompleted;
        
        /// <remarks/>
        public event getAllGroupCompletedEventHandler getAllGroupCompleted;
        
        /// <remarks/>
        public event GetAllSupplierCompletedEventHandler GetAllSupplierCompleted;
        
        /// <remarks/>
        public event GetAllSupplierByIDCompletedEventHandler GetAllSupplierByIDCompleted;
        
        /// <remarks/>
        public event InsertSupplierCompletedEventHandler InsertSupplierCompleted;
        
        /// <remarks/>
        public event UpdateSupplierCompletedEventHandler UpdateSupplierCompleted;
        
        /// <remarks/>
        public event DeleteSupplierCompletedEventHandler DeleteSupplierCompleted;
        
        /// <remarks/>
        public event GetAllCategoryCompletedEventHandler GetAllCategoryCompleted;
        
        /// <remarks/>
        public event GetCategoryIDCompletedEventHandler GetCategoryIDCompleted;
        
        /// <remarks/>
        public event InsertCategoryCompletedEventHandler InsertCategoryCompleted;
        
        /// <remarks/>
        public event UpdateCategoryCompletedEventHandler UpdateCategoryCompleted;
        
        /// <remarks/>
        public event DeleteCategoryCompletedEventHandler DeleteCategoryCompleted;
        
        /// <remarks/>
        public event DeleteEvaluteCompletedEventHandler DeleteEvaluteCompleted;
        
        /// <remarks/>
        public event GetAllCustomerCompletedEventHandler GetAllCustomerCompleted;
        
        /// <remarks/>
        public event GetCustomerByIDCompletedEventHandler GetCustomerByIDCompleted;
        
        /// <remarks/>
        public event insertCustomerCompletedEventHandler insertCustomerCompleted;
        
        /// <remarks/>
        public event deleteCustomerCompletedEventHandler deleteCustomerCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllMessage(int Customer_id) {
            object[] results = this.Invoke("GetAllMessage", new object[] {
                        Customer_id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllMessageAsync(int Customer_id) {
            this.GetAllMessageAsync(Customer_id, null);
        }
        
        /// <remarks/>
        public void GetAllMessageAsync(int Customer_id, object userState) {
            if ((this.GetAllMessageOperationCompleted == null)) {
                this.GetAllMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMessageOperationCompleted);
            }
            this.InvokeAsync("GetAllMessage", new object[] {
                        Customer_id}, this.GetAllMessageOperationCompleted, userState);
        }
        
        private void OnGetAllMessageOperationCompleted(object arg) {
            if ((this.GetAllMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMessageCompleted(this, new GetAllMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllMessageByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllMessageByID(int id) {
            object[] results = this.Invoke("GetAllMessageByID", new object[] {
                        id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllMessageByIDAsync(int id) {
            this.GetAllMessageByIDAsync(id, null);
        }
        
        /// <remarks/>
        public void GetAllMessageByIDAsync(int id, object userState) {
            if ((this.GetAllMessageByIDOperationCompleted == null)) {
                this.GetAllMessageByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMessageByIDOperationCompleted);
            }
            this.InvokeAsync("GetAllMessageByID", new object[] {
                        id}, this.GetAllMessageByIDOperationCompleted, userState);
        }
        
        private void OnGetAllMessageByIDOperationCompleted(object arg) {
            if ((this.GetAllMessageByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMessageByIDCompleted(this, new GetAllMessageByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllMessages", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllMessages() {
            object[] results = this.Invoke("GetAllMessages", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllMessagesAsync() {
            this.GetAllMessagesAsync(null);
        }
        
        /// <remarks/>
        public void GetAllMessagesAsync(object userState) {
            if ((this.GetAllMessagesOperationCompleted == null)) {
                this.GetAllMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMessagesOperationCompleted);
            }
            this.InvokeAsync("GetAllMessages", new object[0], this.GetAllMessagesOperationCompleted, userState);
        }
        
        private void OnGetAllMessagesOperationCompleted(object arg) {
            if ((this.GetAllMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMessagesCompleted(this, new GetAllMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/createMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int createMessage(int Customer_id, string Message_content) {
            object[] results = this.Invoke("createMessage", new object[] {
                        Customer_id,
                        Message_content});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void createMessageAsync(int Customer_id, string Message_content) {
            this.createMessageAsync(Customer_id, Message_content, null);
        }
        
        /// <remarks/>
        public void createMessageAsync(int Customer_id, string Message_content, object userState) {
            if ((this.createMessageOperationCompleted == null)) {
                this.createMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateMessageOperationCompleted);
            }
            this.InvokeAsync("createMessage", new object[] {
                        Customer_id,
                        Message_content}, this.createMessageOperationCompleted, userState);
        }
        
        private void OncreateMessageOperationCompleted(object arg) {
            if ((this.createMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createMessageCompleted(this, new createMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateMessageByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int updateMessageByID(int Message_id, string Message_content, string Category) {
            object[] results = this.Invoke("updateMessageByID", new object[] {
                        Message_id,
                        Message_content,
                        Category});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void updateMessageByIDAsync(int Message_id, string Message_content, string Category) {
            this.updateMessageByIDAsync(Message_id, Message_content, Category, null);
        }
        
        /// <remarks/>
        public void updateMessageByIDAsync(int Message_id, string Message_content, string Category, object userState) {
            if ((this.updateMessageByIDOperationCompleted == null)) {
                this.updateMessageByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateMessageByIDOperationCompleted);
            }
            this.InvokeAsync("updateMessageByID", new object[] {
                        Message_id,
                        Message_content,
                        Category}, this.updateMessageByIDOperationCompleted, userState);
        }
        
        private void OnupdateMessageByIDOperationCompleted(object arg) {
            if ((this.updateMessageByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateMessageByIDCompleted(this, new updateMessageByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/createMessageAdmin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int createMessageAdmin(string Category, string Message_content) {
            object[] results = this.Invoke("createMessageAdmin", new object[] {
                        Category,
                        Message_content});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void createMessageAdminAsync(string Category, string Message_content) {
            this.createMessageAdminAsync(Category, Message_content, null);
        }
        
        /// <remarks/>
        public void createMessageAdminAsync(string Category, string Message_content, object userState) {
            if ((this.createMessageAdminOperationCompleted == null)) {
                this.createMessageAdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateMessageAdminOperationCompleted);
            }
            this.InvokeAsync("createMessageAdmin", new object[] {
                        Category,
                        Message_content}, this.createMessageAdminOperationCompleted, userState);
        }
        
        private void OncreateMessageAdminOperationCompleted(object arg) {
            if ((this.createMessageAdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createMessageAdminCompleted(this, new createMessageAdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteMessageAdmin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int deleteMessageAdmin(int Message_id) {
            object[] results = this.Invoke("deleteMessageAdmin", new object[] {
                        Message_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteMessageAdminAsync(int Message_id) {
            this.deleteMessageAdminAsync(Message_id, null);
        }
        
        /// <remarks/>
        public void deleteMessageAdminAsync(int Message_id, object userState) {
            if ((this.deleteMessageAdminOperationCompleted == null)) {
                this.deleteMessageAdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteMessageAdminOperationCompleted);
            }
            this.InvokeAsync("deleteMessageAdmin", new object[] {
                        Message_id}, this.deleteMessageAdminOperationCompleted, userState);
        }
        
        private void OndeleteMessageAdminOperationCompleted(object arg) {
            if ((this.deleteMessageAdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteMessageAdminCompleted(this, new deleteMessageAdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMessageMax", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int getMessageMax() {
            object[] results = this.Invoke("getMessageMax", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getMessageMaxAsync() {
            this.getMessageMaxAsync(null);
        }
        
        /// <remarks/>
        public void getMessageMaxAsync(object userState) {
            if ((this.getMessageMaxOperationCompleted == null)) {
                this.getMessageMaxOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMessageMaxOperationCompleted);
            }
            this.InvokeAsync("getMessageMax", new object[0], this.getMessageMaxOperationCompleted, userState);
        }
        
        private void OngetMessageMaxOperationCompleted(object arg) {
            if ((this.getMessageMaxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMessageMaxCompleted(this, new getMessageMaxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMessageByCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMessageByCategory(string CategoryName) {
            object[] results = this.Invoke("GetMessageByCategory", new object[] {
                        CategoryName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageByCategoryAsync(string CategoryName) {
            this.GetMessageByCategoryAsync(CategoryName, null);
        }
        
        /// <remarks/>
        public void GetMessageByCategoryAsync(string CategoryName, object userState) {
            if ((this.GetMessageByCategoryOperationCompleted == null)) {
                this.GetMessageByCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageByCategoryOperationCompleted);
            }
            this.InvokeAsync("GetMessageByCategory", new object[] {
                        CategoryName}, this.GetMessageByCategoryOperationCompleted, userState);
        }
        
        private void OnGetMessageByCategoryOperationCompleted(object arg) {
            if ((this.GetMessageByCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageByCategoryCompleted(this, new GetMessageByCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCountProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCountProduct(string searchName, int category) {
            object[] results = this.Invoke("GetCountProduct", new object[] {
                        searchName,
                        category});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCountProductAsync(string searchName, int category) {
            this.GetCountProductAsync(searchName, category, null);
        }
        
        /// <remarks/>
        public void GetCountProductAsync(string searchName, int category, object userState) {
            if ((this.GetCountProductOperationCompleted == null)) {
                this.GetCountProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountProductOperationCompleted);
            }
            this.InvokeAsync("GetCountProduct", new object[] {
                        searchName,
                        category}, this.GetCountProductOperationCompleted, userState);
        }
        
        private void OnGetCountProductOperationCompleted(object arg) {
            if ((this.GetCountProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountProductCompleted(this, new GetCountProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllProduct(string searchName, string sortName, string typeSort, int offset, int limit, int category) {
            object[] results = this.Invoke("GetAllProduct", new object[] {
                        searchName,
                        sortName,
                        typeSort,
                        offset,
                        limit,
                        category});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllProductAsync(string searchName, string sortName, string typeSort, int offset, int limit, int category) {
            this.GetAllProductAsync(searchName, sortName, typeSort, offset, limit, category, null);
        }
        
        /// <remarks/>
        public void GetAllProductAsync(string searchName, string sortName, string typeSort, int offset, int limit, int category, object userState) {
            if ((this.GetAllProductOperationCompleted == null)) {
                this.GetAllProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllProductOperationCompleted);
            }
            this.InvokeAsync("GetAllProduct", new object[] {
                        searchName,
                        sortName,
                        typeSort,
                        offset,
                        limit,
                        category}, this.GetAllProductOperationCompleted, userState);
        }
        
        private void OnGetAllProductOperationCompleted(object arg) {
            if ((this.GetAllProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllProductCompleted(this, new GetAllProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllProducts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllProducts() {
            object[] results = this.Invoke("GetAllProducts", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllProductsAsync() {
            this.GetAllProductsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllProductsAsync(object userState) {
            if ((this.GetAllProductsOperationCompleted == null)) {
                this.GetAllProductsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllProductsOperationCompleted);
            }
            this.InvokeAsync("GetAllProducts", new object[0], this.GetAllProductsOperationCompleted, userState);
        }
        
        private void OnGetAllProductsOperationCompleted(object arg) {
            if ((this.GetAllProductsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllProductsCompleted(this, new GetAllProductsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllProductsID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllProductsID(string ID) {
            object[] results = this.Invoke("GetAllProductsID", new object[] {
                        ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllProductsIDAsync(string ID) {
            this.GetAllProductsIDAsync(ID, null);
        }
        
        /// <remarks/>
        public void GetAllProductsIDAsync(string ID, object userState) {
            if ((this.GetAllProductsIDOperationCompleted == null)) {
                this.GetAllProductsIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllProductsIDOperationCompleted);
            }
            this.InvokeAsync("GetAllProductsID", new object[] {
                        ID}, this.GetAllProductsIDOperationCompleted, userState);
        }
        
        private void OnGetAllProductsIDOperationCompleted(object arg) {
            if ((this.GetAllProductsIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllProductsIDCompleted(this, new GetAllProductsIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductByCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProductByCategory(int categoryID) {
            object[] results = this.Invoke("GetProductByCategory", new object[] {
                        categoryID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductByCategoryAsync(int categoryID) {
            this.GetProductByCategoryAsync(categoryID, null);
        }
        
        /// <remarks/>
        public void GetProductByCategoryAsync(int categoryID, object userState) {
            if ((this.GetProductByCategoryOperationCompleted == null)) {
                this.GetProductByCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductByCategoryOperationCompleted);
            }
            this.InvokeAsync("GetProductByCategory", new object[] {
                        categoryID}, this.GetProductByCategoryOperationCompleted, userState);
        }
        
        private void OnGetProductByCategoryOperationCompleted(object arg) {
            if ((this.GetProductByCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductByCategoryCompleted(this, new GetProductByCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProductByID(string productID) {
            object[] results = this.Invoke("GetProductByID", new object[] {
                        productID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductByIDAsync(string productID) {
            this.GetProductByIDAsync(productID, null);
        }
        
        /// <remarks/>
        public void GetProductByIDAsync(string productID, object userState) {
            if ((this.GetProductByIDOperationCompleted == null)) {
                this.GetProductByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductByIDOperationCompleted);
            }
            this.InvokeAsync("GetProductByID", new object[] {
                        productID}, this.GetProductByIDOperationCompleted, userState);
        }
        
        private void OnGetProductByIDOperationCompleted(object arg) {
            if ((this.GetProductByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductByIDCompleted(this, new GetProductByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkExitsProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int checkExitsProduct(string productID) {
            object[] results = this.Invoke("checkExitsProduct", new object[] {
                        productID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void checkExitsProductAsync(string productID) {
            this.checkExitsProductAsync(productID, null);
        }
        
        /// <remarks/>
        public void checkExitsProductAsync(string productID, object userState) {
            if ((this.checkExitsProductOperationCompleted == null)) {
                this.checkExitsProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckExitsProductOperationCompleted);
            }
            this.InvokeAsync("checkExitsProduct", new object[] {
                        productID}, this.checkExitsProductOperationCompleted, userState);
        }
        
        private void OncheckExitsProductOperationCompleted(object arg) {
            if ((this.checkExitsProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkExitsProductCompleted(this, new checkExitsProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateProductByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int updateProductByID(string Product_id, string Product_name, string Description, string Image, float Price, float Discount, int Category_id, int Supplier_id, int Update_by, int Inventory, int Sold) {
            object[] results = this.Invoke("updateProductByID", new object[] {
                        Product_id,
                        Product_name,
                        Description,
                        Image,
                        Price,
                        Discount,
                        Category_id,
                        Supplier_id,
                        Update_by,
                        Inventory,
                        Sold});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void updateProductByIDAsync(string Product_id, string Product_name, string Description, string Image, float Price, float Discount, int Category_id, int Supplier_id, int Update_by, int Inventory, int Sold) {
            this.updateProductByIDAsync(Product_id, Product_name, Description, Image, Price, Discount, Category_id, Supplier_id, Update_by, Inventory, Sold, null);
        }
        
        /// <remarks/>
        public void updateProductByIDAsync(string Product_id, string Product_name, string Description, string Image, float Price, float Discount, int Category_id, int Supplier_id, int Update_by, int Inventory, int Sold, object userState) {
            if ((this.updateProductByIDOperationCompleted == null)) {
                this.updateProductByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateProductByIDOperationCompleted);
            }
            this.InvokeAsync("updateProductByID", new object[] {
                        Product_id,
                        Product_name,
                        Description,
                        Image,
                        Price,
                        Discount,
                        Category_id,
                        Supplier_id,
                        Update_by,
                        Inventory,
                        Sold}, this.updateProductByIDOperationCompleted, userState);
        }
        
        private void OnupdateProductByIDOperationCompleted(object arg) {
            if ((this.updateProductByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateProductByIDCompleted(this, new updateProductByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteProductsByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int deleteProductsByID(string id) {
            object[] results = this.Invoke("deleteProductsByID", new object[] {
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteProductsByIDAsync(string id) {
            this.deleteProductsByIDAsync(id, null);
        }
        
        /// <remarks/>
        public void deleteProductsByIDAsync(string id, object userState) {
            if ((this.deleteProductsByIDOperationCompleted == null)) {
                this.deleteProductsByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteProductsByIDOperationCompleted);
            }
            this.InvokeAsync("deleteProductsByID", new object[] {
                        id}, this.deleteProductsByIDOperationCompleted, userState);
        }
        
        private void OndeleteProductsByIDOperationCompleted(object arg) {
            if ((this.deleteProductsByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteProductsByIDCompleted(this, new deleteProductsByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/insertGetProductByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int insertGetProductByID(string Product_id, string Product_name, string Description, string Image, float Price, float Discount, int Category_id, int Supplier_id, int Update_by, int Inventory) {
            object[] results = this.Invoke("insertGetProductByID", new object[] {
                        Product_id,
                        Product_name,
                        Description,
                        Image,
                        Price,
                        Discount,
                        Category_id,
                        Supplier_id,
                        Update_by,
                        Inventory});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void insertGetProductByIDAsync(string Product_id, string Product_name, string Description, string Image, float Price, float Discount, int Category_id, int Supplier_id, int Update_by, int Inventory) {
            this.insertGetProductByIDAsync(Product_id, Product_name, Description, Image, Price, Discount, Category_id, Supplier_id, Update_by, Inventory, null);
        }
        
        /// <remarks/>
        public void insertGetProductByIDAsync(string Product_id, string Product_name, string Description, string Image, float Price, float Discount, int Category_id, int Supplier_id, int Update_by, int Inventory, object userState) {
            if ((this.insertGetProductByIDOperationCompleted == null)) {
                this.insertGetProductByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertGetProductByIDOperationCompleted);
            }
            this.InvokeAsync("insertGetProductByID", new object[] {
                        Product_id,
                        Product_name,
                        Description,
                        Image,
                        Price,
                        Discount,
                        Category_id,
                        Supplier_id,
                        Update_by,
                        Inventory}, this.insertGetProductByIDOperationCompleted, userState);
        }
        
        private void OninsertGetProductByIDOperationCompleted(object arg) {
            if ((this.insertGetProductByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertGetProductByIDCompleted(this, new insertGetProductByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCategoryName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCategoryName(int category) {
            object[] results = this.Invoke("GetCategoryName", new object[] {
                        category});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCategoryNameAsync(int category) {
            this.GetCategoryNameAsync(category, null);
        }
        
        /// <remarks/>
        public void GetCategoryNameAsync(int category, object userState) {
            if ((this.GetCategoryNameOperationCompleted == null)) {
                this.GetCategoryNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCategoryNameOperationCompleted);
            }
            this.InvokeAsync("GetCategoryName", new object[] {
                        category}, this.GetCategoryNameOperationCompleted, userState);
        }
        
        private void OnGetCategoryNameOperationCompleted(object arg) {
            if ((this.GetCategoryNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCategoryNameCompleted(this, new GetCategoryNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoginAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoginAccount(string Phone, string Password) {
            object[] results = this.Invoke("LoginAccount", new object[] {
                        Phone,
                        Password});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAccountAsync(string Phone, string Password) {
            this.LoginAccountAsync(Phone, Password, null);
        }
        
        /// <remarks/>
        public void LoginAccountAsync(string Phone, string Password, object userState) {
            if ((this.LoginAccountOperationCompleted == null)) {
                this.LoginAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginAccountOperationCompleted);
            }
            this.InvokeAsync("LoginAccount", new object[] {
                        Phone,
                        Password}, this.LoginAccountOperationCompleted, userState);
        }
        
        private void OnLoginAccountOperationCompleted(object arg) {
            if ((this.LoginAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginAccountCompleted(this, new LoginAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoginCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoginCustomer(string Phone, string Password) {
            object[] results = this.Invoke("LoginCustomer", new object[] {
                        Phone,
                        Password});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoginCustomerAsync(string Phone, string Password) {
            this.LoginCustomerAsync(Phone, Password, null);
        }
        
        /// <remarks/>
        public void LoginCustomerAsync(string Phone, string Password, object userState) {
            if ((this.LoginCustomerOperationCompleted == null)) {
                this.LoginCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginCustomerOperationCompleted);
            }
            this.InvokeAsync("LoginCustomer", new object[] {
                        Phone,
                        Password}, this.LoginCustomerOperationCompleted, userState);
        }
        
        private void OnLoginCustomerOperationCompleted(object arg) {
            if ((this.LoginCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCustomerCompleted(this, new LoginCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkLoginCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int checkLoginCustomer(string Phone, string Password) {
            object[] results = this.Invoke("checkLoginCustomer", new object[] {
                        Phone,
                        Password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void checkLoginCustomerAsync(string Phone, string Password) {
            this.checkLoginCustomerAsync(Phone, Password, null);
        }
        
        /// <remarks/>
        public void checkLoginCustomerAsync(string Phone, string Password, object userState) {
            if ((this.checkLoginCustomerOperationCompleted == null)) {
                this.checkLoginCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckLoginCustomerOperationCompleted);
            }
            this.InvokeAsync("checkLoginCustomer", new object[] {
                        Phone,
                        Password}, this.checkLoginCustomerOperationCompleted, userState);
        }
        
        private void OncheckLoginCustomerOperationCompleted(object arg) {
            if ((this.checkLoginCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkLoginCustomerCompleted(this, new checkLoginCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkRegistrationCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int checkRegistrationCustomer(string Phone) {
            object[] results = this.Invoke("checkRegistrationCustomer", new object[] {
                        Phone});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void checkRegistrationCustomerAsync(string Phone) {
            this.checkRegistrationCustomerAsync(Phone, null);
        }
        
        /// <remarks/>
        public void checkRegistrationCustomerAsync(string Phone, object userState) {
            if ((this.checkRegistrationCustomerOperationCompleted == null)) {
                this.checkRegistrationCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckRegistrationCustomerOperationCompleted);
            }
            this.InvokeAsync("checkRegistrationCustomer", new object[] {
                        Phone}, this.checkRegistrationCustomerOperationCompleted, userState);
        }
        
        private void OncheckRegistrationCustomerOperationCompleted(object arg) {
            if ((this.checkRegistrationCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkRegistrationCustomerCompleted(this, new checkRegistrationCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/registrationCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int registrationCustomer(string FirstName, string LastName, string Phone, string Password) {
            object[] results = this.Invoke("registrationCustomer", new object[] {
                        FirstName,
                        LastName,
                        Phone,
                        Password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void registrationCustomerAsync(string FirstName, string LastName, string Phone, string Password) {
            this.registrationCustomerAsync(FirstName, LastName, Phone, Password, null);
        }
        
        /// <remarks/>
        public void registrationCustomerAsync(string FirstName, string LastName, string Phone, string Password, object userState) {
            if ((this.registrationCustomerOperationCompleted == null)) {
                this.registrationCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregistrationCustomerOperationCompleted);
            }
            this.InvokeAsync("registrationCustomer", new object[] {
                        FirstName,
                        LastName,
                        Phone,
                        Password}, this.registrationCustomerOperationCompleted, userState);
        }
        
        private void OnregistrationCustomerOperationCompleted(object arg) {
            if ((this.registrationCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.registrationCustomerCompleted(this, new registrationCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getInformationCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getInformationCustomer(int customerID) {
            object[] results = this.Invoke("getInformationCustomer", new object[] {
                        customerID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getInformationCustomerAsync(int customerID) {
            this.getInformationCustomerAsync(customerID, null);
        }
        
        /// <remarks/>
        public void getInformationCustomerAsync(int customerID, object userState) {
            if ((this.getInformationCustomerOperationCompleted == null)) {
                this.getInformationCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetInformationCustomerOperationCompleted);
            }
            this.InvokeAsync("getInformationCustomer", new object[] {
                        customerID}, this.getInformationCustomerOperationCompleted, userState);
        }
        
        private void OngetInformationCustomerOperationCompleted(object arg) {
            if ((this.getInformationCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getInformationCustomerCompleted(this, new getInformationCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkPhoneExits", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int checkPhoneExits(string oldPhone, string newphone) {
            object[] results = this.Invoke("checkPhoneExits", new object[] {
                        oldPhone,
                        newphone});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void checkPhoneExitsAsync(string oldPhone, string newphone) {
            this.checkPhoneExitsAsync(oldPhone, newphone, null);
        }
        
        /// <remarks/>
        public void checkPhoneExitsAsync(string oldPhone, string newphone, object userState) {
            if ((this.checkPhoneExitsOperationCompleted == null)) {
                this.checkPhoneExitsOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckPhoneExitsOperationCompleted);
            }
            this.InvokeAsync("checkPhoneExits", new object[] {
                        oldPhone,
                        newphone}, this.checkPhoneExitsOperationCompleted, userState);
        }
        
        private void OncheckPhoneExitsOperationCompleted(object arg) {
            if ((this.checkPhoneExitsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkPhoneExitsCompleted(this, new checkPhoneExitsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkPasswordExits", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int checkPasswordExits(string password) {
            object[] results = this.Invoke("checkPasswordExits", new object[] {
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void checkPasswordExitsAsync(string password) {
            this.checkPasswordExitsAsync(password, null);
        }
        
        /// <remarks/>
        public void checkPasswordExitsAsync(string password, object userState) {
            if ((this.checkPasswordExitsOperationCompleted == null)) {
                this.checkPasswordExitsOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckPasswordExitsOperationCompleted);
            }
            this.InvokeAsync("checkPasswordExits", new object[] {
                        password}, this.checkPasswordExitsOperationCompleted, userState);
        }
        
        private void OncheckPasswordExitsOperationCompleted(object arg) {
            if ((this.checkPasswordExitsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkPasswordExitsCompleted(this, new checkPasswordExitsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/changePassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int changePassword(int customerID, string password) {
            object[] results = this.Invoke("changePassword", new object[] {
                        customerID,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void changePasswordAsync(int customerID, string password) {
            this.changePasswordAsync(customerID, password, null);
        }
        
        /// <remarks/>
        public void changePasswordAsync(int customerID, string password, object userState) {
            if ((this.changePasswordOperationCompleted == null)) {
                this.changePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangePasswordOperationCompleted);
            }
            this.InvokeAsync("changePassword", new object[] {
                        customerID,
                        password}, this.changePasswordOperationCompleted, userState);
        }
        
        private void OnchangePasswordOperationCompleted(object arg) {
            if ((this.changePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changePasswordCompleted(this, new changePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateCustomerById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int updateCustomerById(int customerID, string First_name, string Last_name, string Sex, System.DateTime Birth_day, string Phone) {
            object[] results = this.Invoke("updateCustomerById", new object[] {
                        customerID,
                        First_name,
                        Last_name,
                        Sex,
                        Birth_day,
                        Phone});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void updateCustomerByIdAsync(int customerID, string First_name, string Last_name, string Sex, System.DateTime Birth_day, string Phone) {
            this.updateCustomerByIdAsync(customerID, First_name, Last_name, Sex, Birth_day, Phone, null);
        }
        
        /// <remarks/>
        public void updateCustomerByIdAsync(int customerID, string First_name, string Last_name, string Sex, System.DateTime Birth_day, string Phone, object userState) {
            if ((this.updateCustomerByIdOperationCompleted == null)) {
                this.updateCustomerByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateCustomerByIdOperationCompleted);
            }
            this.InvokeAsync("updateCustomerById", new object[] {
                        customerID,
                        First_name,
                        Last_name,
                        Sex,
                        Birth_day,
                        Phone}, this.updateCustomerByIdOperationCompleted, userState);
        }
        
        private void OnupdateCustomerByIdOperationCompleted(object arg) {
            if ((this.updateCustomerByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateCustomerByIdCompleted(this, new updateCustomerByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllEvalute", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllEvalute() {
            object[] results = this.Invoke("GetAllEvalute", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllEvaluteAsync() {
            this.GetAllEvaluteAsync(null);
        }
        
        /// <remarks/>
        public void GetAllEvaluteAsync(object userState) {
            if ((this.GetAllEvaluteOperationCompleted == null)) {
                this.GetAllEvaluteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllEvaluteOperationCompleted);
            }
            this.InvokeAsync("GetAllEvalute", new object[0], this.GetAllEvaluteOperationCompleted, userState);
        }
        
        private void OnGetAllEvaluteOperationCompleted(object arg) {
            if ((this.GetAllEvaluteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllEvaluteCompleted(this, new GetAllEvaluteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllEvaluteByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllEvaluteByID(int id) {
            object[] results = this.Invoke("GetAllEvaluteByID", new object[] {
                        id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllEvaluteByIDAsync(int id) {
            this.GetAllEvaluteByIDAsync(id, null);
        }
        
        /// <remarks/>
        public void GetAllEvaluteByIDAsync(int id, object userState) {
            if ((this.GetAllEvaluteByIDOperationCompleted == null)) {
                this.GetAllEvaluteByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllEvaluteByIDOperationCompleted);
            }
            this.InvokeAsync("GetAllEvaluteByID", new object[] {
                        id}, this.GetAllEvaluteByIDOperationCompleted, userState);
        }
        
        private void OnGetAllEvaluteByIDOperationCompleted(object arg) {
            if ((this.GetAllEvaluteByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllEvaluteByIDCompleted(this, new GetAllEvaluteByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEvaluteByProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetEvaluteByProduct(string ProductID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> rate) {
            object[] results = this.Invoke("GetEvaluteByProduct", new object[] {
                        ProductID,
                        rate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetEvaluteByProductAsync(string ProductID, System.Nullable<int> rate) {
            this.GetEvaluteByProductAsync(ProductID, rate, null);
        }
        
        /// <remarks/>
        public void GetEvaluteByProductAsync(string ProductID, System.Nullable<int> rate, object userState) {
            if ((this.GetEvaluteByProductOperationCompleted == null)) {
                this.GetEvaluteByProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEvaluteByProductOperationCompleted);
            }
            this.InvokeAsync("GetEvaluteByProduct", new object[] {
                        ProductID,
                        rate}, this.GetEvaluteByProductOperationCompleted, userState);
        }
        
        private void OnGetEvaluteByProductOperationCompleted(object arg) {
            if ((this.GetEvaluteByProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEvaluteByProductCompleted(this, new GetEvaluteByProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCountEvaluteByRate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCountEvaluteByRate(string ProductID, int Rate) {
            object[] results = this.Invoke("GetCountEvaluteByRate", new object[] {
                        ProductID,
                        Rate});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCountEvaluteByRateAsync(string ProductID, int Rate) {
            this.GetCountEvaluteByRateAsync(ProductID, Rate, null);
        }
        
        /// <remarks/>
        public void GetCountEvaluteByRateAsync(string ProductID, int Rate, object userState) {
            if ((this.GetCountEvaluteByRateOperationCompleted == null)) {
                this.GetCountEvaluteByRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountEvaluteByRateOperationCompleted);
            }
            this.InvokeAsync("GetCountEvaluteByRate", new object[] {
                        ProductID,
                        Rate}, this.GetCountEvaluteByRateOperationCompleted, userState);
        }
        
        private void OnGetCountEvaluteByRateOperationCompleted(object arg) {
            if ((this.GetCountEvaluteByRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountEvaluteByRateCompleted(this, new GetCountEvaluteByRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAddressByCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getAddressByCustomer(int customerID) {
            object[] results = this.Invoke("getAddressByCustomer", new object[] {
                        customerID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getAddressByCustomerAsync(int customerID) {
            this.getAddressByCustomerAsync(customerID, null);
        }
        
        /// <remarks/>
        public void getAddressByCustomerAsync(int customerID, object userState) {
            if ((this.getAddressByCustomerOperationCompleted == null)) {
                this.getAddressByCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAddressByCustomerOperationCompleted);
            }
            this.InvokeAsync("getAddressByCustomer", new object[] {
                        customerID}, this.getAddressByCustomerOperationCompleted, userState);
        }
        
        private void OngetAddressByCustomerOperationCompleted(object arg) {
            if ((this.getAddressByCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAddressByCustomerCompleted(this, new getAddressByCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAddressByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getAddressByID(int ID) {
            object[] results = this.Invoke("getAddressByID", new object[] {
                        ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getAddressByIDAsync(int ID) {
            this.getAddressByIDAsync(ID, null);
        }
        
        /// <remarks/>
        public void getAddressByIDAsync(int ID, object userState) {
            if ((this.getAddressByIDOperationCompleted == null)) {
                this.getAddressByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAddressByIDOperationCompleted);
            }
            this.InvokeAsync("getAddressByID", new object[] {
                        ID}, this.getAddressByIDOperationCompleted, userState);
        }
        
        private void OngetAddressByIDOperationCompleted(object arg) {
            if ((this.getAddressByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAddressByIDCompleted(this, new getAddressByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAddressMax", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int getAddressMax() {
            object[] results = this.Invoke("getAddressMax", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getAddressMaxAsync() {
            this.getAddressMaxAsync(null);
        }
        
        /// <remarks/>
        public void getAddressMaxAsync(object userState) {
            if ((this.getAddressMaxOperationCompleted == null)) {
                this.getAddressMaxOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAddressMaxOperationCompleted);
            }
            this.InvokeAsync("getAddressMax", new object[0], this.getAddressMaxOperationCompleted, userState);
        }
        
        private void OngetAddressMaxOperationCompleted(object arg) {
            if ((this.getAddressMaxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAddressMaxCompleted(this, new getAddressMaxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/insertAddressByCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int insertAddressByCustomer(int customerID, string Name, string Address, string Phone) {
            object[] results = this.Invoke("insertAddressByCustomer", new object[] {
                        customerID,
                        Name,
                        Address,
                        Phone});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void insertAddressByCustomerAsync(int customerID, string Name, string Address, string Phone) {
            this.insertAddressByCustomerAsync(customerID, Name, Address, Phone, null);
        }
        
        /// <remarks/>
        public void insertAddressByCustomerAsync(int customerID, string Name, string Address, string Phone, object userState) {
            if ((this.insertAddressByCustomerOperationCompleted == null)) {
                this.insertAddressByCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertAddressByCustomerOperationCompleted);
            }
            this.InvokeAsync("insertAddressByCustomer", new object[] {
                        customerID,
                        Name,
                        Address,
                        Phone}, this.insertAddressByCustomerOperationCompleted, userState);
        }
        
        private void OninsertAddressByCustomerOperationCompleted(object arg) {
            if ((this.insertAddressByCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertAddressByCustomerCompleted(this, new insertAddressByCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateAddressByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int updateAddressByID(int Flower_recipient_id, string Name, string Address, string Phone) {
            object[] results = this.Invoke("updateAddressByID", new object[] {
                        Flower_recipient_id,
                        Name,
                        Address,
                        Phone});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void updateAddressByIDAsync(int Flower_recipient_id, string Name, string Address, string Phone) {
            this.updateAddressByIDAsync(Flower_recipient_id, Name, Address, Phone, null);
        }
        
        /// <remarks/>
        public void updateAddressByIDAsync(int Flower_recipient_id, string Name, string Address, string Phone, object userState) {
            if ((this.updateAddressByIDOperationCompleted == null)) {
                this.updateAddressByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateAddressByIDOperationCompleted);
            }
            this.InvokeAsync("updateAddressByID", new object[] {
                        Flower_recipient_id,
                        Name,
                        Address,
                        Phone}, this.updateAddressByIDOperationCompleted, userState);
        }
        
        private void OnupdateAddressByIDOperationCompleted(object arg) {
            if ((this.updateAddressByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateAddressByIDCompleted(this, new updateAddressByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteAddressByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int deleteAddressByID(int Flower_recipient_id) {
            object[] results = this.Invoke("deleteAddressByID", new object[] {
                        Flower_recipient_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAddressByIDAsync(int Flower_recipient_id) {
            this.deleteAddressByIDAsync(Flower_recipient_id, null);
        }
        
        /// <remarks/>
        public void deleteAddressByIDAsync(int Flower_recipient_id, object userState) {
            if ((this.deleteAddressByIDOperationCompleted == null)) {
                this.deleteAddressByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAddressByIDOperationCompleted);
            }
            this.InvokeAsync("deleteAddressByID", new object[] {
                        Flower_recipient_id}, this.deleteAddressByIDOperationCompleted, userState);
        }
        
        private void OndeleteAddressByIDOperationCompleted(object arg) {
            if ((this.deleteAddressByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAddressByIDCompleted(this, new deleteAddressByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllOrder() {
            object[] results = this.Invoke("GetAllOrder", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllOrderAsync() {
            this.GetAllOrderAsync(null);
        }
        
        /// <remarks/>
        public void GetAllOrderAsync(object userState) {
            if ((this.GetAllOrderOperationCompleted == null)) {
                this.GetAllOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllOrderOperationCompleted);
            }
            this.InvokeAsync("GetAllOrder", new object[0], this.GetAllOrderOperationCompleted, userState);
        }
        
        private void OnGetAllOrderOperationCompleted(object arg) {
            if ((this.GetAllOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllOrderCompleted(this, new GetAllOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrderByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOrderByID(int ID) {
            object[] results = this.Invoke("GetOrderByID", new object[] {
                        ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderByIDAsync(int ID) {
            this.GetOrderByIDAsync(ID, null);
        }
        
        /// <remarks/>
        public void GetOrderByIDAsync(int ID, object userState) {
            if ((this.GetOrderByIDOperationCompleted == null)) {
                this.GetOrderByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderByIDOperationCompleted);
            }
            this.InvokeAsync("GetOrderByID", new object[] {
                        ID}, this.GetOrderByIDOperationCompleted, userState);
        }
        
        private void OnGetOrderByIDOperationCompleted(object arg) {
            if ((this.GetOrderByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderByIDCompleted(this, new GetOrderByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/insertOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int insertOrder(int customerID, int Flower_recipient_id, float Total, int Message_id, string Received_date, string Received_time) {
            object[] results = this.Invoke("insertOrder", new object[] {
                        customerID,
                        Flower_recipient_id,
                        Total,
                        Message_id,
                        Received_date,
                        Received_time});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void insertOrderAsync(int customerID, int Flower_recipient_id, float Total, int Message_id, string Received_date, string Received_time) {
            this.insertOrderAsync(customerID, Flower_recipient_id, Total, Message_id, Received_date, Received_time, null);
        }
        
        /// <remarks/>
        public void insertOrderAsync(int customerID, int Flower_recipient_id, float Total, int Message_id, string Received_date, string Received_time, object userState) {
            if ((this.insertOrderOperationCompleted == null)) {
                this.insertOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertOrderOperationCompleted);
            }
            this.InvokeAsync("insertOrder", new object[] {
                        customerID,
                        Flower_recipient_id,
                        Total,
                        Message_id,
                        Received_date,
                        Received_time}, this.insertOrderOperationCompleted, userState);
        }
        
        private void OninsertOrderOperationCompleted(object arg) {
            if ((this.insertOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertOrderCompleted(this, new insertOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getOrderMax", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int getOrderMax() {
            object[] results = this.Invoke("getOrderMax", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getOrderMaxAsync() {
            this.getOrderMaxAsync(null);
        }
        
        /// <remarks/>
        public void getOrderMaxAsync(object userState) {
            if ((this.getOrderMaxOperationCompleted == null)) {
                this.getOrderMaxOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOrderMaxOperationCompleted);
            }
            this.InvokeAsync("getOrderMax", new object[0], this.getOrderMaxOperationCompleted, userState);
        }
        
        private void OngetOrderMaxOperationCompleted(object arg) {
            if ((this.getOrderMaxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getOrderMaxCompleted(this, new getOrderMaxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrderDetailByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOrderDetailByID(int orderID) {
            object[] results = this.Invoke("GetOrderDetailByID", new object[] {
                        orderID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderDetailByIDAsync(int orderID) {
            this.GetOrderDetailByIDAsync(orderID, null);
        }
        
        /// <remarks/>
        public void GetOrderDetailByIDAsync(int orderID, object userState) {
            if ((this.GetOrderDetailByIDOperationCompleted == null)) {
                this.GetOrderDetailByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderDetailByIDOperationCompleted);
            }
            this.InvokeAsync("GetOrderDetailByID", new object[] {
                        orderID}, this.GetOrderDetailByIDOperationCompleted, userState);
        }
        
        private void OnGetOrderDetailByIDOperationCompleted(object arg) {
            if ((this.GetOrderDetailByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderDetailByIDCompleted(this, new GetOrderDetailByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrderDetailByDetailsID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOrderDetailByDetailsID(int orderDetailsID) {
            object[] results = this.Invoke("GetOrderDetailByDetailsID", new object[] {
                        orderDetailsID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderDetailByDetailsIDAsync(int orderDetailsID) {
            this.GetOrderDetailByDetailsIDAsync(orderDetailsID, null);
        }
        
        /// <remarks/>
        public void GetOrderDetailByDetailsIDAsync(int orderDetailsID, object userState) {
            if ((this.GetOrderDetailByDetailsIDOperationCompleted == null)) {
                this.GetOrderDetailByDetailsIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderDetailByDetailsIDOperationCompleted);
            }
            this.InvokeAsync("GetOrderDetailByDetailsID", new object[] {
                        orderDetailsID}, this.GetOrderDetailByDetailsIDOperationCompleted, userState);
        }
        
        private void OnGetOrderDetailByDetailsIDOperationCompleted(object arg) {
            if ((this.GetOrderDetailByDetailsIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderDetailByDetailsIDCompleted(this, new GetOrderDetailByDetailsIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/insertOrderDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int insertOrderDetails(string Product_id, int Order_id, int Quantity, float Price, float Discount) {
            object[] results = this.Invoke("insertOrderDetails", new object[] {
                        Product_id,
                        Order_id,
                        Quantity,
                        Price,
                        Discount});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void insertOrderDetailsAsync(string Product_id, int Order_id, int Quantity, float Price, float Discount) {
            this.insertOrderDetailsAsync(Product_id, Order_id, Quantity, Price, Discount, null);
        }
        
        /// <remarks/>
        public void insertOrderDetailsAsync(string Product_id, int Order_id, int Quantity, float Price, float Discount, object userState) {
            if ((this.insertOrderDetailsOperationCompleted == null)) {
                this.insertOrderDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertOrderDetailsOperationCompleted);
            }
            this.InvokeAsync("insertOrderDetails", new object[] {
                        Product_id,
                        Order_id,
                        Quantity,
                        Price,
                        Discount}, this.insertOrderDetailsOperationCompleted, userState);
        }
        
        private void OninsertOrderDetailsOperationCompleted(object arg) {
            if ((this.insertOrderDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertOrderDetailsCompleted(this, new insertOrderDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/insertBanking", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int insertBanking(string Banking_name, string Number, int Customer_id, int Order_id, float Total) {
            object[] results = this.Invoke("insertBanking", new object[] {
                        Banking_name,
                        Number,
                        Customer_id,
                        Order_id,
                        Total});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void insertBankingAsync(string Banking_name, string Number, int Customer_id, int Order_id, float Total) {
            this.insertBankingAsync(Banking_name, Number, Customer_id, Order_id, Total, null);
        }
        
        /// <remarks/>
        public void insertBankingAsync(string Banking_name, string Number, int Customer_id, int Order_id, float Total, object userState) {
            if ((this.insertBankingOperationCompleted == null)) {
                this.insertBankingOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertBankingOperationCompleted);
            }
            this.InvokeAsync("insertBanking", new object[] {
                        Banking_name,
                        Number,
                        Customer_id,
                        Order_id,
                        Total}, this.insertBankingOperationCompleted, userState);
        }
        
        private void OninsertBankingOperationCompleted(object arg) {
            if ((this.insertBankingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertBankingCompleted(this, new insertBankingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllAdmin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getAllAdmin() {
            object[] results = this.Invoke("getAllAdmin", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getAllAdminAsync() {
            this.getAllAdminAsync(null);
        }
        
        /// <remarks/>
        public void getAllAdminAsync(object userState) {
            if ((this.getAllAdminOperationCompleted == null)) {
                this.getAllAdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllAdminOperationCompleted);
            }
            this.InvokeAsync("getAllAdmin", new object[0], this.getAllAdminOperationCompleted, userState);
        }
        
        private void OngetAllAdminOperationCompleted(object arg) {
            if ((this.getAllAdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllAdminCompleted(this, new getAllAdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllAdminByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getAllAdminByID(int id) {
            object[] results = this.Invoke("getAllAdminByID", new object[] {
                        id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getAllAdminByIDAsync(int id) {
            this.getAllAdminByIDAsync(id, null);
        }
        
        /// <remarks/>
        public void getAllAdminByIDAsync(int id, object userState) {
            if ((this.getAllAdminByIDOperationCompleted == null)) {
                this.getAllAdminByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllAdminByIDOperationCompleted);
            }
            this.InvokeAsync("getAllAdminByID", new object[] {
                        id}, this.getAllAdminByIDOperationCompleted, userState);
        }
        
        private void OngetAllAdminByIDOperationCompleted(object arg) {
            if ((this.getAllAdminByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllAdminByIDCompleted(this, new getAllAdminByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkLoginAdmin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int checkLoginAdmin(string UserName, string Password) {
            object[] results = this.Invoke("checkLoginAdmin", new object[] {
                        UserName,
                        Password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void checkLoginAdminAsync(string UserName, string Password) {
            this.checkLoginAdminAsync(UserName, Password, null);
        }
        
        /// <remarks/>
        public void checkLoginAdminAsync(string UserName, string Password, object userState) {
            if ((this.checkLoginAdminOperationCompleted == null)) {
                this.checkLoginAdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckLoginAdminOperationCompleted);
            }
            this.InvokeAsync("checkLoginAdmin", new object[] {
                        UserName,
                        Password}, this.checkLoginAdminOperationCompleted, userState);
        }
        
        private void OncheckLoginAdminOperationCompleted(object arg) {
            if ((this.checkLoginAdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkLoginAdminCompleted(this, new checkLoginAdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoginAccountAdmin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoginAccountAdmin(string UserName, string Password) {
            object[] results = this.Invoke("LoginAccountAdmin", new object[] {
                        UserName,
                        Password});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAccountAdminAsync(string UserName, string Password) {
            this.LoginAccountAdminAsync(UserName, Password, null);
        }
        
        /// <remarks/>
        public void LoginAccountAdminAsync(string UserName, string Password, object userState) {
            if ((this.LoginAccountAdminOperationCompleted == null)) {
                this.LoginAccountAdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginAccountAdminOperationCompleted);
            }
            this.InvokeAsync("LoginAccountAdmin", new object[] {
                        UserName,
                        Password}, this.LoginAccountAdminOperationCompleted, userState);
        }
        
        private void OnLoginAccountAdminOperationCompleted(object arg) {
            if ((this.LoginAccountAdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginAccountAdminCompleted(this, new LoginAccountAdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getListUrl", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getListUrl(int groupID) {
            object[] results = this.Invoke("getListUrl", new object[] {
                        groupID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getListUrlAsync(int groupID) {
            this.getListUrlAsync(groupID, null);
        }
        
        /// <remarks/>
        public void getListUrlAsync(int groupID, object userState) {
            if ((this.getListUrlOperationCompleted == null)) {
                this.getListUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetListUrlOperationCompleted);
            }
            this.InvokeAsync("getListUrl", new object[] {
                        groupID}, this.getListUrlOperationCompleted, userState);
        }
        
        private void OngetListUrlOperationCompleted(object arg) {
            if ((this.getListUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getListUrlCompleted(this, new getListUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/insertAccountAdmin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int insertAccountAdmin(string User_name, string Password, int Group_id, string Employee_name, string Phone) {
            object[] results = this.Invoke("insertAccountAdmin", new object[] {
                        User_name,
                        Password,
                        Group_id,
                        Employee_name,
                        Phone});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void insertAccountAdminAsync(string User_name, string Password, int Group_id, string Employee_name, string Phone) {
            this.insertAccountAdminAsync(User_name, Password, Group_id, Employee_name, Phone, null);
        }
        
        /// <remarks/>
        public void insertAccountAdminAsync(string User_name, string Password, int Group_id, string Employee_name, string Phone, object userState) {
            if ((this.insertAccountAdminOperationCompleted == null)) {
                this.insertAccountAdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertAccountAdminOperationCompleted);
            }
            this.InvokeAsync("insertAccountAdmin", new object[] {
                        User_name,
                        Password,
                        Group_id,
                        Employee_name,
                        Phone}, this.insertAccountAdminOperationCompleted, userState);
        }
        
        private void OninsertAccountAdminOperationCompleted(object arg) {
            if ((this.insertAccountAdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertAccountAdminCompleted(this, new insertAccountAdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateAdminByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int updateAdminByID(int Account_id, string User_name, string Password, int Group_id, string Employee_name, string Phone) {
            object[] results = this.Invoke("updateAdminByID", new object[] {
                        Account_id,
                        User_name,
                        Password,
                        Group_id,
                        Employee_name,
                        Phone});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void updateAdminByIDAsync(int Account_id, string User_name, string Password, int Group_id, string Employee_name, string Phone) {
            this.updateAdminByIDAsync(Account_id, User_name, Password, Group_id, Employee_name, Phone, null);
        }
        
        /// <remarks/>
        public void updateAdminByIDAsync(int Account_id, string User_name, string Password, int Group_id, string Employee_name, string Phone, object userState) {
            if ((this.updateAdminByIDOperationCompleted == null)) {
                this.updateAdminByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateAdminByIDOperationCompleted);
            }
            this.InvokeAsync("updateAdminByID", new object[] {
                        Account_id,
                        User_name,
                        Password,
                        Group_id,
                        Employee_name,
                        Phone}, this.updateAdminByIDOperationCompleted, userState);
        }
        
        private void OnupdateAdminByIDOperationCompleted(object arg) {
            if ((this.updateAdminByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateAdminByIDCompleted(this, new updateAdminByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteAdminByAdmin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int deleteAdminByAdmin(int id) {
            object[] results = this.Invoke("deleteAdminByAdmin", new object[] {
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAdminByAdminAsync(int id) {
            this.deleteAdminByAdminAsync(id, null);
        }
        
        /// <remarks/>
        public void deleteAdminByAdminAsync(int id, object userState) {
            if ((this.deleteAdminByAdminOperationCompleted == null)) {
                this.deleteAdminByAdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAdminByAdminOperationCompleted);
            }
            this.InvokeAsync("deleteAdminByAdmin", new object[] {
                        id}, this.deleteAdminByAdminOperationCompleted, userState);
        }
        
        private void OndeleteAdminByAdminOperationCompleted(object arg) {
            if ((this.deleteAdminByAdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAdminByAdminCompleted(this, new deleteAdminByAdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getAllGroup() {
            object[] results = this.Invoke("getAllGroup", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getAllGroupAsync() {
            this.getAllGroupAsync(null);
        }
        
        /// <remarks/>
        public void getAllGroupAsync(object userState) {
            if ((this.getAllGroupOperationCompleted == null)) {
                this.getAllGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllGroupOperationCompleted);
            }
            this.InvokeAsync("getAllGroup", new object[0], this.getAllGroupOperationCompleted, userState);
        }
        
        private void OngetAllGroupOperationCompleted(object arg) {
            if ((this.getAllGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllGroupCompleted(this, new getAllGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllSupplier", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllSupplier() {
            object[] results = this.Invoke("GetAllSupplier", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllSupplierAsync() {
            this.GetAllSupplierAsync(null);
        }
        
        /// <remarks/>
        public void GetAllSupplierAsync(object userState) {
            if ((this.GetAllSupplierOperationCompleted == null)) {
                this.GetAllSupplierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllSupplierOperationCompleted);
            }
            this.InvokeAsync("GetAllSupplier", new object[0], this.GetAllSupplierOperationCompleted, userState);
        }
        
        private void OnGetAllSupplierOperationCompleted(object arg) {
            if ((this.GetAllSupplierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllSupplierCompleted(this, new GetAllSupplierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllSupplierByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllSupplierByID(int Supplier_id) {
            object[] results = this.Invoke("GetAllSupplierByID", new object[] {
                        Supplier_id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllSupplierByIDAsync(int Supplier_id) {
            this.GetAllSupplierByIDAsync(Supplier_id, null);
        }
        
        /// <remarks/>
        public void GetAllSupplierByIDAsync(int Supplier_id, object userState) {
            if ((this.GetAllSupplierByIDOperationCompleted == null)) {
                this.GetAllSupplierByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllSupplierByIDOperationCompleted);
            }
            this.InvokeAsync("GetAllSupplierByID", new object[] {
                        Supplier_id}, this.GetAllSupplierByIDOperationCompleted, userState);
        }
        
        private void OnGetAllSupplierByIDOperationCompleted(object arg) {
            if ((this.GetAllSupplierByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllSupplierByIDCompleted(this, new GetAllSupplierByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertSupplier", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertSupplier(string Supplier_name, string Address, string Phone) {
            object[] results = this.Invoke("InsertSupplier", new object[] {
                        Supplier_name,
                        Address,
                        Phone});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertSupplierAsync(string Supplier_name, string Address, string Phone) {
            this.InsertSupplierAsync(Supplier_name, Address, Phone, null);
        }
        
        /// <remarks/>
        public void InsertSupplierAsync(string Supplier_name, string Address, string Phone, object userState) {
            if ((this.InsertSupplierOperationCompleted == null)) {
                this.InsertSupplierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertSupplierOperationCompleted);
            }
            this.InvokeAsync("InsertSupplier", new object[] {
                        Supplier_name,
                        Address,
                        Phone}, this.InsertSupplierOperationCompleted, userState);
        }
        
        private void OnInsertSupplierOperationCompleted(object arg) {
            if ((this.InsertSupplierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertSupplierCompleted(this, new InsertSupplierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateSupplier", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateSupplier(int SupplierID, string SupplierName, string Address, string Phone) {
            object[] results = this.Invoke("UpdateSupplier", new object[] {
                        SupplierID,
                        SupplierName,
                        Address,
                        Phone});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSupplierAsync(int SupplierID, string SupplierName, string Address, string Phone) {
            this.UpdateSupplierAsync(SupplierID, SupplierName, Address, Phone, null);
        }
        
        /// <remarks/>
        public void UpdateSupplierAsync(int SupplierID, string SupplierName, string Address, string Phone, object userState) {
            if ((this.UpdateSupplierOperationCompleted == null)) {
                this.UpdateSupplierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSupplierOperationCompleted);
            }
            this.InvokeAsync("UpdateSupplier", new object[] {
                        SupplierID,
                        SupplierName,
                        Address,
                        Phone}, this.UpdateSupplierOperationCompleted, userState);
        }
        
        private void OnUpdateSupplierOperationCompleted(object arg) {
            if ((this.UpdateSupplierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSupplierCompleted(this, new UpdateSupplierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteSupplier", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteSupplier(int SupplierID) {
            object[] results = this.Invoke("DeleteSupplier", new object[] {
                        SupplierID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSupplierAsync(int SupplierID) {
            this.DeleteSupplierAsync(SupplierID, null);
        }
        
        /// <remarks/>
        public void DeleteSupplierAsync(int SupplierID, object userState) {
            if ((this.DeleteSupplierOperationCompleted == null)) {
                this.DeleteSupplierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSupplierOperationCompleted);
            }
            this.InvokeAsync("DeleteSupplier", new object[] {
                        SupplierID}, this.DeleteSupplierOperationCompleted, userState);
        }
        
        private void OnDeleteSupplierOperationCompleted(object arg) {
            if ((this.DeleteSupplierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSupplierCompleted(this, new DeleteSupplierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllCategory() {
            object[] results = this.Invoke("GetAllCategory", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllCategoryAsync() {
            this.GetAllCategoryAsync(null);
        }
        
        /// <remarks/>
        public void GetAllCategoryAsync(object userState) {
            if ((this.GetAllCategoryOperationCompleted == null)) {
                this.GetAllCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllCategoryOperationCompleted);
            }
            this.InvokeAsync("GetAllCategory", new object[0], this.GetAllCategoryOperationCompleted, userState);
        }
        
        private void OnGetAllCategoryOperationCompleted(object arg) {
            if ((this.GetAllCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllCategoryCompleted(this, new GetAllCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCategoryID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCategoryID(int CategoryID) {
            object[] results = this.Invoke("GetCategoryID", new object[] {
                        CategoryID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCategoryIDAsync(int CategoryID) {
            this.GetCategoryIDAsync(CategoryID, null);
        }
        
        /// <remarks/>
        public void GetCategoryIDAsync(int CategoryID, object userState) {
            if ((this.GetCategoryIDOperationCompleted == null)) {
                this.GetCategoryIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCategoryIDOperationCompleted);
            }
            this.InvokeAsync("GetCategoryID", new object[] {
                        CategoryID}, this.GetCategoryIDOperationCompleted, userState);
        }
        
        private void OnGetCategoryIDOperationCompleted(object arg) {
            if ((this.GetCategoryIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCategoryIDCompleted(this, new GetCategoryIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertCategory(string CategoryName) {
            object[] results = this.Invoke("InsertCategory", new object[] {
                        CategoryName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertCategoryAsync(string CategoryName) {
            this.InsertCategoryAsync(CategoryName, null);
        }
        
        /// <remarks/>
        public void InsertCategoryAsync(string CategoryName, object userState) {
            if ((this.InsertCategoryOperationCompleted == null)) {
                this.InsertCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCategoryOperationCompleted);
            }
            this.InvokeAsync("InsertCategory", new object[] {
                        CategoryName}, this.InsertCategoryOperationCompleted, userState);
        }
        
        private void OnInsertCategoryOperationCompleted(object arg) {
            if ((this.InsertCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCategoryCompleted(this, new InsertCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateCategory(int CategoryID, string CategoryName) {
            object[] results = this.Invoke("UpdateCategory", new object[] {
                        CategoryID,
                        CategoryName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCategoryAsync(int CategoryID, string CategoryName) {
            this.UpdateCategoryAsync(CategoryID, CategoryName, null);
        }
        
        /// <remarks/>
        public void UpdateCategoryAsync(int CategoryID, string CategoryName, object userState) {
            if ((this.UpdateCategoryOperationCompleted == null)) {
                this.UpdateCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCategoryOperationCompleted);
            }
            this.InvokeAsync("UpdateCategory", new object[] {
                        CategoryID,
                        CategoryName}, this.UpdateCategoryOperationCompleted, userState);
        }
        
        private void OnUpdateCategoryOperationCompleted(object arg) {
            if ((this.UpdateCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCategoryCompleted(this, new UpdateCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteCategory(int CategoryID) {
            object[] results = this.Invoke("DeleteCategory", new object[] {
                        CategoryID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCategoryAsync(int CategoryID) {
            this.DeleteCategoryAsync(CategoryID, null);
        }
        
        /// <remarks/>
        public void DeleteCategoryAsync(int CategoryID, object userState) {
            if ((this.DeleteCategoryOperationCompleted == null)) {
                this.DeleteCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCategoryOperationCompleted);
            }
            this.InvokeAsync("DeleteCategory", new object[] {
                        CategoryID}, this.DeleteCategoryOperationCompleted, userState);
        }
        
        private void OnDeleteCategoryOperationCompleted(object arg) {
            if ((this.DeleteCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCategoryCompleted(this, new DeleteCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteEvalute", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteEvalute(int EvaluteID) {
            object[] results = this.Invoke("DeleteEvalute", new object[] {
                        EvaluteID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteEvaluteAsync(int EvaluteID) {
            this.DeleteEvaluteAsync(EvaluteID, null);
        }
        
        /// <remarks/>
        public void DeleteEvaluteAsync(int EvaluteID, object userState) {
            if ((this.DeleteEvaluteOperationCompleted == null)) {
                this.DeleteEvaluteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEvaluteOperationCompleted);
            }
            this.InvokeAsync("DeleteEvalute", new object[] {
                        EvaluteID}, this.DeleteEvaluteOperationCompleted, userState);
        }
        
        private void OnDeleteEvaluteOperationCompleted(object arg) {
            if ((this.DeleteEvaluteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEvaluteCompleted(this, new DeleteEvaluteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllCustomer() {
            object[] results = this.Invoke("GetAllCustomer", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllCustomerAsync() {
            this.GetAllCustomerAsync(null);
        }
        
        /// <remarks/>
        public void GetAllCustomerAsync(object userState) {
            if ((this.GetAllCustomerOperationCompleted == null)) {
                this.GetAllCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllCustomerOperationCompleted);
            }
            this.InvokeAsync("GetAllCustomer", new object[0], this.GetAllCustomerOperationCompleted, userState);
        }
        
        private void OnGetAllCustomerOperationCompleted(object arg) {
            if ((this.GetAllCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllCustomerCompleted(this, new GetAllCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCustomerByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCustomerByID(int id) {
            object[] results = this.Invoke("GetCustomerByID", new object[] {
                        id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerByIDAsync(int id) {
            this.GetCustomerByIDAsync(id, null);
        }
        
        /// <remarks/>
        public void GetCustomerByIDAsync(int id, object userState) {
            if ((this.GetCustomerByIDOperationCompleted == null)) {
                this.GetCustomerByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerByIDOperationCompleted);
            }
            this.InvokeAsync("GetCustomerByID", new object[] {
                        id}, this.GetCustomerByIDOperationCompleted, userState);
        }
        
        private void OnGetCustomerByIDOperationCompleted(object arg) {
            if ((this.GetCustomerByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerByIDCompleted(this, new GetCustomerByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/insertCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int insertCustomer(string FirstName, string LastName, string Phone, string Password) {
            object[] results = this.Invoke("insertCustomer", new object[] {
                        FirstName,
                        LastName,
                        Phone,
                        Password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void insertCustomerAsync(string FirstName, string LastName, string Phone, string Password) {
            this.insertCustomerAsync(FirstName, LastName, Phone, Password, null);
        }
        
        /// <remarks/>
        public void insertCustomerAsync(string FirstName, string LastName, string Phone, string Password, object userState) {
            if ((this.insertCustomerOperationCompleted == null)) {
                this.insertCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertCustomerOperationCompleted);
            }
            this.InvokeAsync("insertCustomer", new object[] {
                        FirstName,
                        LastName,
                        Phone,
                        Password}, this.insertCustomerOperationCompleted, userState);
        }
        
        private void OninsertCustomerOperationCompleted(object arg) {
            if ((this.insertCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertCustomerCompleted(this, new insertCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int deleteCustomer(int CustomerID) {
            object[] results = this.Invoke("deleteCustomer", new object[] {
                        CustomerID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteCustomerAsync(int CustomerID) {
            this.deleteCustomerAsync(CustomerID, null);
        }
        
        /// <remarks/>
        public void deleteCustomerAsync(int CustomerID, object userState) {
            if ((this.deleteCustomerOperationCompleted == null)) {
                this.deleteCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteCustomerOperationCompleted);
            }
            this.InvokeAsync("deleteCustomer", new object[] {
                        CustomerID}, this.deleteCustomerOperationCompleted, userState);
        }
        
        private void OndeleteCustomerOperationCompleted(object arg) {
            if ((this.deleteCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCustomerCompleted(this, new deleteCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAllMessageCompletedEventHandler(object sender, GetAllMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAllMessageByIDCompletedEventHandler(object sender, GetAllMessageByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMessageByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllMessageByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAllMessagesCompletedEventHandler(object sender, GetAllMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createMessageCompletedEventHandler(object sender, createMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void updateMessageByIDCompletedEventHandler(object sender, updateMessageByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateMessageByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateMessageByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createMessageAdminCompletedEventHandler(object sender, createMessageAdminCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createMessageAdminCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createMessageAdminCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void deleteMessageAdminCompletedEventHandler(object sender, deleteMessageAdminCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteMessageAdminCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteMessageAdminCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void getMessageMaxCompletedEventHandler(object sender, getMessageMaxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMessageMaxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMessageMaxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMessageByCategoryCompletedEventHandler(object sender, GetMessageByCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageByCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageByCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCountProductCompletedEventHandler(object sender, GetCountProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAllProductCompletedEventHandler(object sender, GetAllProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAllProductsCompletedEventHandler(object sender, GetAllProductsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAllProductsIDCompletedEventHandler(object sender, GetAllProductsIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllProductsIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllProductsIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetProductByCategoryCompletedEventHandler(object sender, GetProductByCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductByCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductByCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetProductByIDCompletedEventHandler(object sender, GetProductByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void checkExitsProductCompletedEventHandler(object sender, checkExitsProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkExitsProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkExitsProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void updateProductByIDCompletedEventHandler(object sender, updateProductByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateProductByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateProductByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void deleteProductsByIDCompletedEventHandler(object sender, deleteProductsByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteProductsByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteProductsByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void insertGetProductByIDCompletedEventHandler(object sender, insertGetProductByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertGetProductByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertGetProductByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCategoryNameCompletedEventHandler(object sender, GetCategoryNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCategoryNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCategoryNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void LoginAccountCompletedEventHandler(object sender, LoginAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void LoginCustomerCompletedEventHandler(object sender, LoginCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void checkLoginCustomerCompletedEventHandler(object sender, checkLoginCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkLoginCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkLoginCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void checkRegistrationCustomerCompletedEventHandler(object sender, checkRegistrationCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkRegistrationCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkRegistrationCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void registrationCustomerCompletedEventHandler(object sender, registrationCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class registrationCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal registrationCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void getInformationCustomerCompletedEventHandler(object sender, getInformationCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getInformationCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getInformationCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void checkPhoneExitsCompletedEventHandler(object sender, checkPhoneExitsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkPhoneExitsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkPhoneExitsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void checkPasswordExitsCompletedEventHandler(object sender, checkPasswordExitsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkPasswordExitsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkPasswordExitsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void changePasswordCompletedEventHandler(object sender, changePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class changePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal changePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void updateCustomerByIdCompletedEventHandler(object sender, updateCustomerByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateCustomerByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateCustomerByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAllEvaluteCompletedEventHandler(object sender, GetAllEvaluteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllEvaluteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllEvaluteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAllEvaluteByIDCompletedEventHandler(object sender, GetAllEvaluteByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllEvaluteByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllEvaluteByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetEvaluteByProductCompletedEventHandler(object sender, GetEvaluteByProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEvaluteByProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEvaluteByProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCountEvaluteByRateCompletedEventHandler(object sender, GetCountEvaluteByRateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountEvaluteByRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountEvaluteByRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void getAddressByCustomerCompletedEventHandler(object sender, getAddressByCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAddressByCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAddressByCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void getAddressByIDCompletedEventHandler(object sender, getAddressByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAddressByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAddressByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void getAddressMaxCompletedEventHandler(object sender, getAddressMaxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAddressMaxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAddressMaxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void insertAddressByCustomerCompletedEventHandler(object sender, insertAddressByCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertAddressByCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertAddressByCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void updateAddressByIDCompletedEventHandler(object sender, updateAddressByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateAddressByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateAddressByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void deleteAddressByIDCompletedEventHandler(object sender, deleteAddressByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAddressByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteAddressByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAllOrderCompletedEventHandler(object sender, GetAllOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetOrderByIDCompletedEventHandler(object sender, GetOrderByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void insertOrderCompletedEventHandler(object sender, insertOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void getOrderMaxCompletedEventHandler(object sender, getOrderMaxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getOrderMaxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getOrderMaxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetOrderDetailByIDCompletedEventHandler(object sender, GetOrderDetailByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderDetailByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderDetailByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetOrderDetailByDetailsIDCompletedEventHandler(object sender, GetOrderDetailByDetailsIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderDetailByDetailsIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderDetailByDetailsIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void insertOrderDetailsCompletedEventHandler(object sender, insertOrderDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertOrderDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertOrderDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void insertBankingCompletedEventHandler(object sender, insertBankingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertBankingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertBankingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void getAllAdminCompletedEventHandler(object sender, getAllAdminCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllAdminCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllAdminCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void getAllAdminByIDCompletedEventHandler(object sender, getAllAdminByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllAdminByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllAdminByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void checkLoginAdminCompletedEventHandler(object sender, checkLoginAdminCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkLoginAdminCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkLoginAdminCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void LoginAccountAdminCompletedEventHandler(object sender, LoginAccountAdminCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginAccountAdminCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginAccountAdminCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void getListUrlCompletedEventHandler(object sender, getListUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getListUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getListUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void insertAccountAdminCompletedEventHandler(object sender, insertAccountAdminCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertAccountAdminCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertAccountAdminCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void updateAdminByIDCompletedEventHandler(object sender, updateAdminByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateAdminByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateAdminByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void deleteAdminByAdminCompletedEventHandler(object sender, deleteAdminByAdminCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAdminByAdminCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteAdminByAdminCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void getAllGroupCompletedEventHandler(object sender, getAllGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAllSupplierCompletedEventHandler(object sender, GetAllSupplierCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllSupplierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllSupplierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAllSupplierByIDCompletedEventHandler(object sender, GetAllSupplierByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllSupplierByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllSupplierByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertSupplierCompletedEventHandler(object sender, InsertSupplierCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertSupplierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertSupplierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateSupplierCompletedEventHandler(object sender, UpdateSupplierCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSupplierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSupplierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteSupplierCompletedEventHandler(object sender, DeleteSupplierCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSupplierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSupplierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAllCategoryCompletedEventHandler(object sender, GetAllCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCategoryIDCompletedEventHandler(object sender, GetCategoryIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCategoryIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCategoryIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertCategoryCompletedEventHandler(object sender, InsertCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateCategoryCompletedEventHandler(object sender, UpdateCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteCategoryCompletedEventHandler(object sender, DeleteCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteEvaluteCompletedEventHandler(object sender, DeleteEvaluteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteEvaluteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteEvaluteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAllCustomerCompletedEventHandler(object sender, GetAllCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCustomerByIDCompletedEventHandler(object sender, GetCustomerByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void insertCustomerCompletedEventHandler(object sender, insertCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void deleteCustomerCompletedEventHandler(object sender, deleteCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591